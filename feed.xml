<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Rabbit Stack</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://rabbitstack.github.io/feed.xml" />
<link rel="alternate" type="text/html" href="http://rabbitstack.github.io" />
<updated>2017-05-29T22:36:55+02:00</updated>
<id>http://rabbitstack.github.io/</id>
<author>
  <name>Nedim Šabić</name>
  <uri>http://rabbitstack.github.io/</uri>
  <email>bhnedo@hotmail.com</email>
</author>


  

<entry>
  <title type="html"><![CDATA[Linux Containers Internals (Part I)]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/operating%20systems/linux-containers-internals-part-i/" />
  <id>http://rabbitstack.github.io/operating%20systems/linux-containers-internals-part-i</id>
  <published>2017-05-29T20:12:55+02:00</published>
  <updated>2017-05-29T20:12:55+02:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;strong&gt;Namespaces&lt;/strong&gt; and &lt;strong&gt;control groups&lt;/strong&gt; (cgroups) are responsible for the magic behind Linux containers. The support for namespaces initially appeared in &lt;strong&gt;2.4.19&lt;/strong&gt; kernels (mount point/file system isolation), but there are now six different types of namespace abstractions in the mainline of the contemporary kernels. From the kernel’s perspective, container is just another process with it’s own set of resources - file descriptors, process address space and processor’s state. For instance, a containerized &lt;strong&gt;nginx&lt;/strong&gt; web server exposes &lt;strong&gt;external PIDs&lt;/strong&gt; for it’s master and worker processes:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nedo@archrabbit&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ps  -eo pid,comm,cmd &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep nginx
&lt;span class=&quot;m&quot;&gt;4971&lt;/span&gt; nginx           nginx: master process nginx -g daemon off&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;4987&lt;/span&gt; nginx           nginx: worker process&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;From the output of the &lt;code&gt;ps&lt;/code&gt; command it’s hard to differentiate containerized processes from other processes running on the host. We can provide another option to the &lt;code&gt;ps&lt;/code&gt; command so it also shows the &lt;strong&gt;cgroup&lt;/strong&gt; to which the process is bounded.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nedo@archrabbit&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ps  -eo pid,comm,cmd,cgroup &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep nginx
&lt;span class=&quot;m&quot;&gt;4971&lt;/span&gt; nginx           nginx: master process nginx      9:blkio:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
8:net_cls:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
7:devices:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
6:pids:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
5:cpu,cpuacct:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
4:freezer:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
3:cpuset:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
2:memory:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
1:name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;systemd:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326
&lt;span class=&quot;m&quot;&gt;4987&lt;/span&gt; nginx           nginx: worker process       9:blkio:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
8:net_cls:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
7:devices:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
6:pids:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
5:cpu,cpuacct:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
4:freezer:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
3:cpuset:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
2:memory:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326,
1:name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;systemd:/docker/91dfd31b99a29c145b2f183970fc9c197261c8381463330aef8c262abe751326&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The output is much more verbose now, but we can see processes are attached to the cgroups of the &lt;strong&gt;docker&lt;/strong&gt; hierarchy, and so assume those are running inside container.&lt;/p&gt;

&lt;p&gt;Surprisingly, the life of a container starts by issuing a &lt;code&gt;clone&lt;/code&gt; system call which creates a new process descriptor. The newborn process can share a number of resources with its parent process depending on the value of the &lt;code&gt;flags&lt;/code&gt; argument. Typically, both child and parent share the same memory address space until one of them decides to write a new memory page, when a copy of that page is moved to the address space of the process which requested the write operation (this optimization technique is commonly known as &lt;strong&gt;CoW&lt;/strong&gt;). Besides sharing the memory address space, they often share file descriptor table and file system information. However, the child process may ask for a separate system resource, including an isolated namespace by providing one of the following flags - &lt;code&gt;CLONE_NEWNS&lt;/code&gt;, &lt;code&gt;CLONE_NEWPID&lt;/code&gt;,  &lt;code&gt;CLONE_NEWUSER&lt;/code&gt;, &lt;code&gt;CLONE_NEWUTS&lt;/code&gt;, &lt;code&gt;CLONE_NEWIPC&lt;/code&gt;, &lt;code&gt;CLONE_NEWNET&lt;/code&gt;. For each of them a new namespace is created and the child process becomes the member of that namespace. The perception of the process is to have its own instance of the system resource that’s only visible to the members of the same namespace. That could be analogous to how kernel provides an illusion to a process through processor virtualization and virtual memory that it’s the only running process on the system (when it’s actually sharing the CPU cycles and physical memory with another processes).&lt;/p&gt;

&lt;p&gt;The process can call &lt;code&gt;unshare&lt;/code&gt; system call as an alternative mechanism to namespace creation, as well as it can join an existing namespace via &lt;code&gt;setns&lt;/code&gt; syscall. The latter needs a file descriptor that identifies a namespace to which the process would like to join (the process can obtain the after-mentioned file descriptor from &lt;code&gt;/proc/[pid]/ns&lt;/code&gt;).&lt;/p&gt;

&lt;h3 id=&quot;file-system-isolation&quot;&gt;File system isolation&lt;/h3&gt;

&lt;p&gt;Mount namespace isolates the set of &lt;strong&gt;mount tables&lt;/strong&gt;. Thus, the collection of processes have a completely independent view of the file system hierarchy. The mount points are only visible to a group of processes of the same mount namespace and they don’t propagate to other mount namespaces, providing the ability to the process to have its own &lt;code&gt;rootfs&lt;/code&gt;. To create a new mount namespace, we pass the &lt;code&gt;CLONE_NEWFS&lt;/code&gt; flag to the &lt;code&gt;clone&lt;/code&gt; syscall. In the example above, we allocate some memory for the child’s stack and pass the callback function that gets executed in the context of the child process. If the call to &lt;code&gt;clone&lt;/code&gt; is successful, we’ll have a child process attached to a brand new mount namespace.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child_cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_mut_ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;CLONE_NEWNS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;null_mut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;panic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;unable to create child process&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, because the child process inherits the copy of the parent’s mount namespace, an invocation to &lt;code&gt;pivot_root&lt;/code&gt; is required to change the root file system of the process. One of the requirements of the &lt;code&gt;pivot_root&lt;/code&gt; syscall enforces the file system directories that are about to be swapped, can’t share the same tree. Calling the &lt;code&gt;mount&lt;/code&gt; function with &lt;code&gt;MS_BIND&lt;/code&gt; flag get our way out.&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;
&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;code&gt;pivot_root&lt;/code&gt; may also fail if the root file system is mounted as shared. To workaround that, run this command: &lt;code&gt;mount --make-rprivate /&lt;/code&gt;
&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pivot_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rootfs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;&amp;#39;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rootfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;rootfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;MS_BIND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;unable to mount rootfs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oldrootfs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{}/.oldrootfs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rootfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()));&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oldrootfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;create_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oldrootfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys_pivot_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rootfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oldrootfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;unable to change rootfs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// change to root directory&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;chdir&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(())&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;pid-and-ipc-namespaces&quot;&gt;PID and IPC namespaces&lt;/h3&gt;

&lt;p&gt;Recall we mentioned the containerized &lt;strong&gt;nginx’s&lt;/strong&gt; instance exposes its external PIDs on the host system. Besides that, every process inside container has an &lt;strong&gt;internal&lt;/strong&gt; PID. This correspondes to a numeric value of &lt;code&gt;1&lt;/code&gt; for the first process inside container which acts as the &lt;code&gt;init&lt;/code&gt; process (waits for and reaps orphaned child processes). The isolation of the PID number space is the guarantee for different PID namespaces to be able to have processes with same PIDs. The PID namespace is created by passing the &lt;code&gt;CLONE_NEWPID&lt;/code&gt; flag to the &lt;code&gt;clone&lt;/code&gt; or &lt;code&gt;unshare&lt;/code&gt; system calls.
&lt;strong&gt;IPC namespace&lt;/strong&gt; (which it’s name implies) isolate interprocess communication mechanisms such as &lt;strong&gt;POSIX message queues&lt;/strong&gt; or &lt;strong&gt;System V IPC&lt;/strong&gt; objects. Passing &lt;code&gt;CLONE_NEWIPC&lt;/code&gt; flag to the &lt;code&gt;clone&lt;/code&gt; system call creates an isolated IPC namespace.&lt;/p&gt;

&lt;p&gt;Here is the full source code that illustrates the creation of new mount, PID and IPC namespaces. Note the code has been reduced to the minimum for simplicity reasons. It makes use of the &lt;code&gt;libc&lt;/code&gt; crate to invoke the system calls through standard C library. If you are looking for a high level abstraction, check out &lt;a href=&quot;https://github.com/nix-rust/nix&quot;&gt;nix&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-rust&quot; data-lang=&quot;rust&quot;&gt;&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;libc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;libc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c_void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;c_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;c_long&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;mount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;syscall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;MS_BIND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;CLONE_NEWNS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;CLONE_NEWPID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
           &lt;span class=&quot;n&quot;&gt;CLONE_NEWIPC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Command&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SYSPIVOTROOT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_long&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;155&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;extern&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;C&amp;quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child_cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_int&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pivot_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rootfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// we are now inside container&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// execute any command of your choice&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{:?}&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                     &lt;span class=&quot;n&quot;&gt;Command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;cat&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/etc/issue&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nb&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;error: {}&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pivot_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rootfs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Result&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;&amp;#39;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rootfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;rootfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;i8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;MS_BIND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                 &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;unable to mount rootfs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oldrootfs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;{}/.oldrootfs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rootfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()));&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oldrootfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;create_dir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oldrootfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys_pivot_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rootfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oldrootfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;unable to change rootfs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// change to root directory&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;Command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;chdir&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;Ok&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(())&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys_pivot_root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oldroot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_long&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;syscall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SYSPIVOTROOT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oldroot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;fn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;unsafe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;child_cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_ptr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mut&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;CLONE_NEWNS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CLONE_NEWPID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CLONE_NEWIPC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
              &lt;span class=&quot;n&quot;&gt;ptr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;null_mut&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;panic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;unable to create child process&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/operating%20systems/linux-containers-internals-part-i/&quot;&gt;Linux Containers Internals (Part I)&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on May 29, 2017.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Fibratus 0.7.0]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/operating%20systems/fibratus-0-7-0/" />
  <id>http://rabbitstack.github.io/operating%20systems/fibratus-0-7-0</id>
  <published>2017-03-25T08:56:28+01:00</published>
  <updated>2017-03-25T08:56:28+01:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;I’m thrilled to announce the release of Fibratus 0.7.0. Let’s see what’s new in this version.&lt;/p&gt;

&lt;h4 id=&quot;yara-integration&quot;&gt;YARA integration&lt;/h4&gt;

&lt;p&gt;This release stems a new set of features I’ve decided to call &lt;strong&gt;bindings&lt;/strong&gt;. They represent join-points between fibratus and other tools that can add additional insights to the data captured from kernel. The first of them is the integration with the &lt;a href=&quot;https://virustoal.github.io/yara/&quot;&gt;Yara&lt;/a&gt; tool. The rule matching phase is triggered when process creation kernel event is detected. The image path of the created process is evaluated against the available rule set. If a match occurs, the &lt;code&gt;CreateProcess&lt;/code&gt; event is enriched with rule context information (the matching rule, rule meta information, data strings etc). Here is the example of the produced JSON payload:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;quot;pid&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;quot;params&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;pid&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2628&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;exe&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;C:\\WINDOWS\\system32\\notepad.exe&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;notepad.exe&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;comm&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\&amp;quot;C:\\WINDOWS\\system32\\notepad.exe\&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;ppid&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;rule_info&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;rule&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;test&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;meta&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;quot;weight&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;quot;author&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;rabbitstack&amp;quot;&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;namespace&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;default&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;strings&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;notepad&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;identifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$magic&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;offset&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;118820&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;data&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;notepad&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;identifier&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;$magic&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;offset&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;137751&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;tags&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&amp;quot;Notepad&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&amp;quot;raw&amp;quot;&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;quot;cpuid&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;quot;proc&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;explorer.exe&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;CreateProcess&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;quot;timestamp&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;2017-03-22 20:09:31.513000&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To enable the YARA binding , you need to edit &lt;code&gt;fibratus.yml&lt;/code&gt; configuration descriptor. Under the &lt;code&gt;yara&lt;/code&gt; binding section, the &lt;code&gt;path&lt;/code&gt; key has to point to a valid path with a directory containing rule definitions. I’m not sure if this is a bug or limitation of the yara cython extension, but if the root directory is traversed recursively with multiple directories containing the &lt;code&gt;yar&lt;/code&gt; files, the matching might not work as expected.&lt;/p&gt;

&lt;h4 id=&quot;standalone-installer&quot;&gt;Standalone installer&lt;/h4&gt;

&lt;p&gt;I have to be honest about the drawbacks of installing fibratus from &lt;strong&gt;PyPI&lt;/strong&gt;. The kernel stream collector needs to be compiled and in order to do it the C compiler has to be present on the local machine. Obviously, the python interpreter and the &lt;code&gt;cython&lt;/code&gt; package are also the required dependencies to install fibratus successfully. Over and above that, the installation of &lt;code&gt;yara-python&lt;/code&gt; package doesn’t go smoothly on Windows, so I ended up compiling &lt;code&gt;libyara&lt;/code&gt; from sources which produces the statically linked library required by &lt;code&gt;yara-python&lt;/code&gt;.
To overcome all those after-mentioned tedious tasks, from this release on, I’ll be shipping the windows installer which embeds python interpreter, cython extensions and any extra dependency in a single binary, so installing fibratus becomes a matter of few clicks. Feel free to download the latest version &lt;a href=&quot;https://github.com/rabbitstack/fibratus/releases/download/v0.7.0/fibratus-0.7.0.exe&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you have any feedback or would like to contribute you can reach out via &lt;a href=&quot;https://github.com/rabbitstack/fibratus/issues&quot;&gt;Github&lt;/a&gt; or drop me an email.&lt;/p&gt;

&lt;p&gt;Enjoy this new release!&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/operating%20systems/fibratus-0-7-0/&quot;&gt;Fibratus 0.7.0&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on March 25, 2017.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Fibratus 0.6.0]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/operating%20systems/fibratus-0-6-0/" />
  <id>http://rabbitstack.github.io/operating%20systems/fibratus-0-6-0</id>
  <published>2017-01-23T15:31:35+01:00</published>
  <updated>2017-01-23T15:31:35+01:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;I’m happy to announce the release of &lt;strong&gt;Fibratus 0.6.0&lt;/strong&gt;. Let’s see what’s new in this version.&lt;/p&gt;

&lt;h3 id=&quot;whats-new&quot;&gt;What’s new&lt;/h3&gt;

&lt;h4 id=&quot;high-performance-kernel-event-stream-collector&quot;&gt;High performance kernel event stream collector&lt;/h4&gt;

&lt;p&gt;The kernel event stream collector has been rewritten from ground up. It now operates without &lt;strong&gt;GIL&lt;/strong&gt; (Global Interpreter Lock) limitations which makes the Python interpreter capable of executing the byte code in parallel. The result is an ultra fast kernel event processing component!
The tricky part about releasing the GIL is that you can’t use any Python constructs before acquiring the GIL again. Such a simple operation as comparing strings has to be done by calling the function from the standard C library. Standard Python’s containers like &lt;code&gt;list&lt;/code&gt; or &lt;code&gt;dict&lt;/code&gt; had been replaced with analogous C++ &lt;code&gt;vector&lt;/code&gt; and &lt;code&gt;unordered_map&lt;/code&gt; containers.
If you look at the source tree, you should notice the &lt;strong&gt;kstream&lt;/strong&gt; directory has changed dramatically. This refactoring will make it easier adding new features to the kernel event stream collector.&lt;/p&gt;

&lt;h4 id=&quot;image-meta-information&quot;&gt;Image meta information&lt;/h4&gt;

&lt;p&gt;Fibratus now supports querying the executable binary files for the &lt;strong&gt;PE&lt;/strong&gt; (Portable Executable) headers. The &lt;code&gt;CreateProcess&lt;/code&gt; kernel events can be enriched with a plethora of interesting info like binary sections, the imported symbols, file information, linkage time stamp, etc. Here is the JSON representation of the image meta information for the &lt;code&gt;cmd.exe&lt;/code&gt; binary:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;image_meta&amp;quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;internal_name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;cmd&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;timestamp&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0x57899A99 [Sat Jul 16 02:23:21 2016 UTC]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;imports&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;  
            &lt;span class=&quot;nt&quot;&gt;&amp;quot;api-ms-win-core-libraryloader-l1-2-0.dll&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;  
               &lt;span class=&quot;s2&quot;&gt;&amp;quot;GetModuleFileNameW&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;s2&quot;&gt;&amp;quot;GetModuleHandleW&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;s2&quot;&gt;&amp;quot;LoadLibraryExW&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;s2&quot;&gt;&amp;quot;GetProcAddress&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;quot;api-ms-win-core-timezone-l1-1-0.dll&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;  
               &lt;span class=&quot;s2&quot;&gt;&amp;quot;SystemTimeToFileTime&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;s2&quot;&gt;&amp;quot;FileTimeToSystemTime&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Windows Command Processor&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;copyright&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\\xa9 Microsoft Corporation. All rights reserved.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;10.0.14393.0 (rs1_release.160715-1616)&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;org&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft Corporation&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;arch&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;x86-64&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;sections&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;  
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;md5&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;64a67cc3d9162fc0e8f3e342498b5521&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;sha512&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;a0f211244eb057bd57100a2bba4010a71b675f47571198004c66597f2d833086bf3aa1c3c4d97635185880f1ef42b45ce2d351f0d3f2bbe24a5b9e9841f38422&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;sha256&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;90bdb2677504f970636f313b32963a7fb6e4a95fefa19a2fae97a783ee3bd24d&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;.text&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;sha1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;59bef951b3e13ddf53778ad0eae69b32c65cebbf&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;entropy&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;6.414245618720535&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;md5&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1e99e85eb32e35b18a9741e2b83f75fd&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;sha512&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ceedd390297dbcea20dd9065567fcf7138cd421007f7f57793e4f2b043c9137720d55ad7fee8ca5a687bb308759df48e001b2258578e69494a0661ee189a504c&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;sha256&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0a17d6c0cdc1a52ea16364787979c1fc4145e82e56ae59620fe7fdc04cc7eec7&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;.rdata&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;err&quot;&gt;...&lt;/span&gt;
         &lt;span class=&quot;err&quot;&gt;],&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;num_sections&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;multiple-output-sinks&quot;&gt;Multiple output sinks&lt;/h4&gt;

&lt;p&gt;The kernel events can now be streamed to multiple output sinks like message brokers, &lt;strong&gt;Elasticsearch&lt;/strong&gt; instances and of course the standard output. In the previous version of Fibratus you had to rely on &lt;strong&gt;filaments&lt;/strong&gt; to transport the event payloads to remote endpoints.&lt;/p&gt;

&lt;p&gt;Beside this relevant features, there been done a ton of code refactoring and other improvements. For example, the bootstrap stage logs a lot of useful information, like the &lt;strong&gt;skips&lt;/strong&gt; being applied, the &lt;strong&gt;outputs&lt;/strong&gt; and its configuration, total boot time, etc.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2017-01-22&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;29.423254&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;INFO:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Fibratus:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Starting&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Fibratus...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2017-01-22&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;29.423254&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;INFO:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Fibratus:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Enumerating&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;handles...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2017-01-22&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;31.628521&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;INFO:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Fibratus:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6352&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;handles&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;found&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2017-01-22&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;31.644142&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;INFO:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Fibratus:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Adding&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;skips&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;images&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;svchost.exe&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;smss.exe&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;services.exe&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;taskmgr.exe&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;dwm.exe&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;vprot.exe&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;lsass.exe&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;sihost.exe&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;system&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2017-01-22&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;31.659769&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;INFO:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Fibratus:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Deploying&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;format&amp;#39;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;json&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2017-01-22&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;31.659769&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;INFO:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Fibratus:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Deploying&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;elasticsearch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;#39;bulk&amp;#39;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;False,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;hosts&amp;#39;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;[&amp;#39;localhost:9200&amp;#39;],&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;ssl&amp;#39;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;False,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;document&amp;#39;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;threads&amp;#39;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;username&amp;#39;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;None,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;index&amp;#39;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&amp;#39;fibratus&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2017-01-22&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;31.728789&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;INFO:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Fibratus:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;Started&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;m:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;02&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;s.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2321&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you have any feedback or would like to contribute you can reach out via &lt;a href=&quot;https://github.com/rabbitstack/fibratus/issues&quot;&gt;Github&lt;/a&gt; or drop me an email.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/operating%20systems/fibratus-0-6-0/&quot;&gt;Fibratus 0.6.0&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on January 23, 2017.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Fibratus 0.4.0]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/operating%20systems/fibratus-0-4-0/" />
  <id>http://rabbitstack.github.io/operating%20systems/fibratus-0-4-0</id>
  <published>2016-11-01T15:31:35+01:00</published>
  <updated>2016-11-01T15:31:35+01:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;I’m pleased to announce the release of &lt;strong&gt;Fibratus 0.4.0&lt;/strong&gt;. The remarkable features of this release include per-pid process spying, &lt;strong&gt;Elasticsearch&lt;/strong&gt; output adapter and the configuration based process exclusions.&lt;/p&gt;

&lt;h3 id=&quot;whats-new&quot;&gt;What’s new&lt;/h3&gt;

&lt;h4 id=&quot;per-pid-process-spying&quot;&gt;Per-pid process spying&lt;/h4&gt;

&lt;p&gt;Let me introduce the &lt;code&gt;--pid&lt;/code&gt; command line option which enables to attach and spy on the activity of the given process. For example, here is the output when attached to the &lt;strong&gt;Chrome&lt;/strong&gt; process:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;fibratus run --pid 6040

...
&lt;span class=&quot;m&quot;&gt;1141&lt;/span&gt; 11:51:43.751000 &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - RegQueryKey &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;hive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;REGISTRY_MACHINE_SYSTEM, &lt;span class=&quot;nv&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;SYSTEM&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;ontrolSet001&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;ontrol&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;ession Manager&lt;span class=&quot;se&quot;&gt;\,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6040, &lt;span class=&quot;nv&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, &lt;span class=&quot;nv&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1624&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1142&lt;/span&gt; 11:51:43.751000 &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - RegQueryKey &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;hive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;REGISTRY_MACHINE_SYSTEM, &lt;span class=&quot;nv&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;SYSTEM&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;ontrolSet001&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;ontrol&lt;span class=&quot;se&quot;&gt;\S&lt;/span&gt;ession Manager&lt;span class=&quot;se&quot;&gt;\,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6040, &lt;span class=&quot;nv&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, &lt;span class=&quot;nv&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1624&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1143&lt;/span&gt; 11:51:43.751000 &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - RegOpenKey &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;hive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;REGISTRY_MACHINE_SOFTWARE, &lt;span class=&quot;nv&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;SOFTWARE&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;OW6432Node&lt;span class=&quot;se&quot;&gt;\G&lt;/span&gt;oogle&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;pdate&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;lientState&lt;span class=&quot;se&quot;&gt;\{&lt;/span&gt;8A69D345-D564-463c-AFF1-A69D9E530F96&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;, &lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6040, &lt;span class=&quot;nv&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, &lt;span class=&quot;nv&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1624&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
...
&lt;span class=&quot;m&quot;&gt;1541&lt;/span&gt; 11:51:52.833000 &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - CloseFile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;evice&lt;span class=&quot;se&quot;&gt;\H&lt;/span&gt;arddiskVolume2&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;edo&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;ppData&lt;span class=&quot;se&quot;&gt;\L&lt;/span&gt;ocal&lt;span class=&quot;se&quot;&gt;\G&lt;/span&gt;oogle&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;hrome&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;ser Data&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;efault&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;ransportSecurity~RFe927c36.TMP, &lt;span class=&quot;nv&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8984&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1542&lt;/span&gt; 11:51:52.833000 &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - CreateFile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;evice&lt;span class=&quot;se&quot;&gt;\H&lt;/span&gt;arddiskVolume2&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;edo&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;ppData&lt;span class=&quot;se&quot;&gt;\L&lt;/span&gt;ocal&lt;span class=&quot;se&quot;&gt;\G&lt;/span&gt;oogle&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;hrome&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;ser Data&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;efault&lt;span class=&quot;se&quot;&gt;\,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;file_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FILE, &lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;OPEN, &lt;span class=&quot;nv&quot;&gt;share_mask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;rw-, &lt;span class=&quot;nv&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8984&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1543&lt;/span&gt; 11:51:52.835000 &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - CloseFile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;evice&lt;span class=&quot;se&quot;&gt;\H&lt;/span&gt;arddiskVolume2&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;edo&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;ppData&lt;span class=&quot;se&quot;&gt;\L&lt;/span&gt;ocal&lt;span class=&quot;se&quot;&gt;\G&lt;/span&gt;oogle&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;hrome&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;ser Data&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;efault&lt;span class=&quot;se&quot;&gt;\,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8984&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1544&lt;/span&gt; 11:51:52.835000 &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - CreateFile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;evice&lt;span class=&quot;se&quot;&gt;\H&lt;/span&gt;arddiskVolume2&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;edo&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;ppData&lt;span class=&quot;se&quot;&gt;\L&lt;/span&gt;ocal&lt;span class=&quot;se&quot;&gt;\G&lt;/span&gt;oogle&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;hrome&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;ser Data&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;efault&lt;span class=&quot;se&quot;&gt;\,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;file_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;FILE, &lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;OPEN, &lt;span class=&quot;nv&quot;&gt;share_mask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;rw-, &lt;span class=&quot;nv&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8984&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1545&lt;/span&gt; 11:51:52.836000 &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - CloseFile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;evice&lt;span class=&quot;se&quot;&gt;\H&lt;/span&gt;arddiskVolume2&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;edo&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;ppData&lt;span class=&quot;se&quot;&gt;\L&lt;/span&gt;ocal&lt;span class=&quot;se&quot;&gt;\G&lt;/span&gt;oogle&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;hrome&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;ser Data&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;efault&lt;span class=&quot;se&quot;&gt;\,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8984&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1546&lt;/span&gt; 11:51:52.836000 &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - CloseFile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;evice&lt;span class=&quot;se&quot;&gt;\H&lt;/span&gt;arddiskVolume2&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;edo&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;ppData&lt;span class=&quot;se&quot;&gt;\L&lt;/span&gt;ocal&lt;span class=&quot;se&quot;&gt;\G&lt;/span&gt;oogle&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;hrome&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;ser Data&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;efault&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;ransportSecurity, &lt;span class=&quot;nv&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8984&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1547&lt;/span&gt; 11:51:52.836000 &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - CloseFile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;evice&lt;span class=&quot;se&quot;&gt;\H&lt;/span&gt;arddiskVolume2&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;edo&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;ppData&lt;span class=&quot;se&quot;&gt;\L&lt;/span&gt;ocal&lt;span class=&quot;se&quot;&gt;\G&lt;/span&gt;oogle&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;hrome&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;ser Data&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;efault&lt;span class=&quot;se&quot;&gt;\7&lt;/span&gt;CFE.tmp, &lt;span class=&quot;nv&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8984&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1548&lt;/span&gt; 11:51:52.836000 &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - CreateFile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;evice&lt;span class=&quot;se&quot;&gt;\H&lt;/span&gt;arddiskVolume2&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;edo&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;ppData&lt;span class=&quot;se&quot;&gt;\L&lt;/span&gt;ocal&lt;span class=&quot;se&quot;&gt;\G&lt;/span&gt;oogle&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;hrome&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;ser Data&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;efault&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;ransportSecurity~RFe927c36.TMP, &lt;span class=&quot;nv&quot;&gt;file_type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;REPARSE_POINT, &lt;span class=&quot;nv&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;OPEN, &lt;span class=&quot;nv&quot;&gt;share_mask&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;rwd, &lt;span class=&quot;nv&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8984&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1549&lt;/span&gt; 11:51:52.836000 &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - DeleteFile &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;evice&lt;span class=&quot;se&quot;&gt;\H&lt;/span&gt;arddiskVolume2&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;edo&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;ppData&lt;span class=&quot;se&quot;&gt;\L&lt;/span&gt;ocal&lt;span class=&quot;se&quot;&gt;\G&lt;/span&gt;oogle&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;hrome&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;ser Data&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;efault&lt;span class=&quot;se&quot;&gt;\T&lt;/span&gt;ransportSecurity~RFe927c36.TMP, &lt;span class=&quot;nv&quot;&gt;tid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8984&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1551&lt;/span&gt; 11:51:53.311000 &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - Recv &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https, &lt;span class=&quot;nv&quot;&gt;dport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;443, &lt;span class=&quot;nv&quot;&gt;ip_dst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.30.253.112, &lt;span class=&quot;nv&quot;&gt;ip_src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.1.105, &lt;span class=&quot;nv&quot;&gt;l4_proto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;TCP, &lt;span class=&quot;nv&quot;&gt;packet_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;31, &lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6040, &lt;span class=&quot;nv&quot;&gt;sport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;55896&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1552&lt;/span&gt; 11:51:53.322000 &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - Recv &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https, &lt;span class=&quot;nv&quot;&gt;dport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;443, &lt;span class=&quot;nv&quot;&gt;ip_dst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.30.253.112, &lt;span class=&quot;nv&quot;&gt;ip_src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.1.105, &lt;span class=&quot;nv&quot;&gt;l4_proto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;TCP, &lt;span class=&quot;nv&quot;&gt;packet_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;31, &lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6040, &lt;span class=&quot;nv&quot;&gt;sport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;55897&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;1553&lt;/span&gt; 11:51:53.648000 &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;6040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - Recv &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https, &lt;span class=&quot;nv&quot;&gt;dport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;443, &lt;span class=&quot;nv&quot;&gt;ip_dst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.30.253.112, &lt;span class=&quot;nv&quot;&gt;ip_src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.1.105, &lt;span class=&quot;nv&quot;&gt;l4_proto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;TCP, &lt;span class=&quot;nv&quot;&gt;packet_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;31, &lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6040, &lt;span class=&quot;nv&quot;&gt;sport&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;55898&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here we can observe the file system operations, the registry activity and the network requests performed by the Chrome process. If you want to narrow the scope of a trace to a specific kernel events, use process spying in combination with the &lt;code&gt;--filters&lt;/code&gt; flag.&lt;/p&gt;

&lt;h4 id=&quot;streaming-kernel-events-to-elasticsearch&quot;&gt;Streaming kernel events to Elasticsearch&lt;/h4&gt;

&lt;p&gt;The kernel event stream can now be emitted to &lt;strong&gt;Elasticsearch&lt;/strong&gt; via the output adapter.
It can perform per-document indexing as well as bulk indexing. The &lt;code&gt;elasticsearch&lt;/code&gt; accessor is injected into filament at runtime. For more information see &lt;code&gt;fibratus.yml&lt;/code&gt; configuration descriptor.&lt;/p&gt;

&lt;h4 id=&quot;process-exclusions&quot;&gt;Process exclusions&lt;/h4&gt;

&lt;p&gt;To avoid the overhead of the unecessary kernel events you can exclude them from the trace.
Just add the process name (including the extension) to the &lt;code&gt;fibratus.yml&lt;/code&gt; configuration file.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;excluded_procs:
  - svchost.exe
  - smss.exe
  - services.exe
  - taskmgr.exe
  - dwm.exe
  - vprot.exe
  - lsass.exe
  - sihost.exe
  - system&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you have any feedback or want to contribute you can reach out via &lt;a href=&quot;https://github.com/rabbitstack/fibratus/issues&quot;&gt;Github&lt;/a&gt; or drop me an email.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/operating%20systems/fibratus-0-4-0/&quot;&gt;Fibratus 0.4.0&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on November 01, 2016.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Fibratus 0.3.0]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/operating%20systems/fibratus-0-3-0/" />
  <id>http://rabbitstack.github.io/operating%20systems/fibratus-0-3-0</id>
  <published>2016-10-03T13:48:25+02:00</published>
  <updated>2016-10-03T13:48:25+02:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;I’m pleased to announce the release of &lt;strong&gt;Fibratus 0.3.0&lt;/strong&gt;. This version ships with support for context switch instrumentation through the &lt;strong&gt;ContextSwitch&lt;/strong&gt; kernel event type.&lt;/p&gt;

&lt;h3 id=&quot;whats-new&quot;&gt;What’s new&lt;/h3&gt;

&lt;p&gt;Because the context switch instrumentation generates a &lt;strong&gt;massive&lt;/strong&gt; volume of events, it is disabled by default. There is a new &lt;code&gt;--cswitch&lt;/code&gt; command line flag to activate the stream of context switch events.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;fibratus run --filters ContextSwitch --cswitch

...
&lt;span class=&quot;m&quot;&gt;4207&lt;/span&gt; 16:15:38.790000 &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; conemu.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;7368&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - ContextSwitch &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, &lt;span class=&quot;nv&quot;&gt;next_proc_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;conemu.exe, &lt;span class=&quot;nv&quot;&gt;next_thread_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;6108, &lt;span class=&quot;nv&quot;&gt;next_thread_prio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;11, &lt;span class=&quot;nv&quot;&gt;next_thread_wait_time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, &lt;span class=&quot;nv&quot;&gt;prev_proc_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ipodservice.exe, &lt;span class=&quot;nv&quot;&gt;prev_thread_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, &lt;span class=&quot;nv&quot;&gt;prev_thread_prio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, &lt;span class=&quot;nv&quot;&gt;prev_thread_state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;RUNNING, &lt;span class=&quot;nv&quot;&gt;prev_thread_wait_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;KERNEL, &lt;span class=&quot;nv&quot;&gt;prev_thread_wait_reason&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;EXECUTIVE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;4208&lt;/span&gt; 16:15:38.790000 &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; conemu.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;7368&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - ContextSwitch &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2, &lt;span class=&quot;nv&quot;&gt;next_proc_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ConEmu.exe, &lt;span class=&quot;nv&quot;&gt;next_thread_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8076, &lt;span class=&quot;nv&quot;&gt;next_thread_prio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;11, &lt;span class=&quot;nv&quot;&gt;next_thread_wait_time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, &lt;span class=&quot;nv&quot;&gt;prev_proc_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ConEmuC64.exe, &lt;span class=&quot;nv&quot;&gt;prev_thread_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, &lt;span class=&quot;nv&quot;&gt;prev_thread_prio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, &lt;span class=&quot;nv&quot;&gt;prev_thread_state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;RUNNING, &lt;span class=&quot;nv&quot;&gt;prev_thread_wait_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;KERNEL, &lt;span class=&quot;nv&quot;&gt;prev_thread_wait_reason&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;EXECUTIVE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;4209&lt;/span&gt; 16:15:38.790000 &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; idle &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - ContextSwitch &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2, &lt;span class=&quot;nv&quot;&gt;next_proc_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;idle, &lt;span class=&quot;nv&quot;&gt;next_thread_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, &lt;span class=&quot;nv&quot;&gt;next_thread_prio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, &lt;span class=&quot;nv&quot;&gt;next_thread_wait_time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;52, &lt;span class=&quot;nv&quot;&gt;prev_proc_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;python.exe, &lt;span class=&quot;nv&quot;&gt;prev_thread_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8076, &lt;span class=&quot;nv&quot;&gt;prev_thread_prio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;11, &lt;span class=&quot;nv&quot;&gt;prev_thread_state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;WAITING, &lt;span class=&quot;nv&quot;&gt;prev_thread_wait_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;USER, &lt;span class=&quot;nv&quot;&gt;prev_thread_wait_reason&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;USER_REQUEST&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;4210&lt;/span&gt; 16:15:38.790000 &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; chrome.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8348&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - ContextSwitch &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3, &lt;span class=&quot;nv&quot;&gt;next_proc_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;chrome.exe, &lt;span class=&quot;nv&quot;&gt;next_thread_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;8352, &lt;span class=&quot;nv&quot;&gt;next_thread_prio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;9, &lt;span class=&quot;nv&quot;&gt;next_thread_wait_time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, &lt;span class=&quot;nv&quot;&gt;prev_proc_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;conemu.exe, &lt;span class=&quot;nv&quot;&gt;prev_thread_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, &lt;span class=&quot;nv&quot;&gt;prev_thread_prio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0, &lt;span class=&quot;nv&quot;&gt;prev_thread_state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;RUNNING, &lt;span class=&quot;nv&quot;&gt;prev_thread_wait_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;KERNEL, &lt;span class=&quot;nv&quot;&gt;prev_thread_wait_reason&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;EXECUTIVE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;4211&lt;/span&gt; 16:15:38.790000 &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; svchost.exe &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;820&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - ContextSwitch &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;cpu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1, &lt;span class=&quot;nv&quot;&gt;next_proc_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;svchost.exe, &lt;span class=&quot;nv&quot;&gt;next_thread_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5832, &lt;span class=&quot;nv&quot;&gt;next_thread_prio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;9, &lt;span class=&quot;nv&quot;&gt;next_thread_wait_time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2, &lt;span class=&quot;nv&quot;&gt;prev_proc_name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;svchost.exe, &lt;span class=&quot;nv&quot;&gt;prev_thread_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4388, &lt;span class=&quot;nv&quot;&gt;prev_thread_prio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;9, &lt;span class=&quot;nv&quot;&gt;prev_thread_state&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;WAITING, &lt;span class=&quot;nv&quot;&gt;prev_thread_wait_mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;USER, &lt;span class=&quot;nv&quot;&gt;prev_thread_wait_reason&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;LPC_REPLY&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let’s see what does those event’s parameters mean.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;cpu&lt;/code&gt; is the identifier of the CPU core where the new thread is running after the context switch has taken place&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;next_proc_name&lt;/code&gt; identifies the process name of the thread which has been chosen by the scheduler&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;next_thread_id&lt;/code&gt; is the identifier of the new thread&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;next_thread_prio&lt;/code&gt; the priority of the new thread&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;next_thread_wait_time&lt;/code&gt; is the time thread has spent waiting in the ready queue before receiving the slice of the CPU time&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;prev_proc_name&lt;/code&gt; the process name of the thread which has been preempted by the kernel. The scheduler assigns the CPU to the new thread&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;prev_thread_id&lt;/code&gt; is the identifier of the old thread&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;prev_thread_prio&lt;/code&gt; the priority of the old thread&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;prev_thread_state&lt;/code&gt; determines the state of the previous thread&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;prev_thread_wait_mode&lt;/code&gt; indicates if the previous thread has been executing in the user space or in the kernel space&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;prev_thread_wait_reason&lt;/code&gt; the action emitted by the thread right before the dispatcher has moved it from the running queue&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have any feedback or want to contribute you can reach out via &lt;a href=&quot;https://github.com/rabbitstack/fibratus/issues&quot;&gt;Github&lt;/a&gt; or drop me an email.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/operating%20systems/fibratus-0-3-0/&quot;&gt;Fibratus 0.3.0&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on October 03, 2016.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Fibratus 0.2.3]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/operating%20systems/fibratus-0-2-3/" />
  <id>http://rabbitstack.github.io/operating%20systems/fibratus-0-2-3</id>
  <published>2016-08-21T13:48:25+02:00</published>
  <updated>2016-08-21T13:48:25+02:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;I’m pleased to announce the first production-ready release of Fibratus. The tool is now available via the &lt;strong&gt;pip&lt;/strong&gt; package manager by typing &lt;code&gt;pip install fibratus&lt;/code&gt; (the C compiler is required to build the kernel stream collector). The &lt;strong&gt;multiprocessing&lt;/strong&gt; and Python serialization don’t play well together when compiled with &lt;strong&gt;nuitka&lt;/strong&gt;. Until I figure out how to make it work I’ll not ship the compiled versions of Fibratus.&lt;/p&gt;

&lt;h3 id=&quot;whats-new&quot;&gt;What’s new&lt;/h3&gt;

&lt;p&gt;There are a bunch of new features and bug fixes in this release:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;filament’s execution model allows scheduling the execution of the filament in a new process&lt;/li&gt;
  &lt;li&gt;streaming kernel events via output adapters (&lt;strong&gt;SMTP&lt;/strong&gt; and &lt;strong&gt;AMQP&lt;/strong&gt; are supported)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;yaml&lt;/strong&gt; based configuration file&lt;/li&gt;
  &lt;li&gt;interval based scheduling inside the filaments&lt;/li&gt;
  &lt;li&gt;writing to console using the standard Windows API&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;asciiart&lt;/strong&gt; package to group the common table drawing functionality&lt;/li&gt;
  &lt;li&gt;shipping new filaments (&lt;code&gt;top_in_packets&lt;/code&gt;, &lt;code&gt;top_out_packets&lt;/code&gt;, &lt;code&gt;top_hives_io&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;resolve filaments directory from the environment variable&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;--no-enum-handles&lt;/code&gt; command line flag to disable the system handles enumeration&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;setuptools&lt;/strong&gt; script for building the Fibratus distribution&lt;/li&gt;
  &lt;li&gt;hosting Fibratus on &lt;a href=&quot;https://pypi.python.org/pypi/fibratus&quot;&gt;&lt;strong&gt;PyPi&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;check for the kernel event filters when calling the &lt;code&gt;process&lt;/code&gt; method on filament&lt;/li&gt;
  &lt;li&gt;initialize the kernel event parameters when hive or key does not satisfy the condition in &lt;code&gt;RegSetValue&lt;/code&gt; or &lt;code&gt;RegQueryValue&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;fixed style violations and code smells&lt;/li&gt;
  &lt;li&gt;migrated from &lt;em&gt;coveralls&lt;/em&gt; to &lt;em&gt;codecov&lt;/em&gt; platform&lt;/li&gt;
  &lt;li&gt;improved code coverage&lt;/li&gt;
  &lt;li&gt;code refactoring and comments&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you have any feedback, you can reach out via &lt;a href=&quot;https://github.com/rabbitstack/fibratus/issues&quot;&gt;Github&lt;/a&gt; or drop me an email.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/operating%20systems/fibratus-0-2-3/&quot;&gt;Fibratus 0.2.3&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on August 21, 2016.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Fibratus Pre-Release]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/operating%20systems/fibratus-pre-release/" />
  <id>http://rabbitstack.github.io/operating%20systems/fibratus-pre-release</id>
  <published>2016-06-12T17:44:25+02:00</published>
  <updated>2016-06-12T17:44:25+02:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Pardon me for not announcing the pre-release availability of &lt;a href=&quot;https://github.com/rabbitstack/fibratus&quot;&gt;&lt;strong&gt;Fibratus&lt;/strong&gt;&lt;/a&gt; here on the blog. It was a pretty busy month for me.&lt;/p&gt;

&lt;p class=&quot;image-pull-right&quot;&gt;
  &lt;img src=&quot;/images/fibratus.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Anyway, I feel very excited about Fibratus. At the moment of writing, it has &lt;strong&gt;205&lt;/strong&gt; stars and &lt;strong&gt;23&lt;/strong&gt; forks on Github. I didn’t expect much acceptance during these &lt;strong&gt;3&lt;/strong&gt; weeks since I pushed the code to the repository! The production ready release should be out shortly. There are some minor issues to fix.&lt;/p&gt;

&lt;p&gt;I’m figuring out on how to avoid blocking the main thread when calling the &lt;code&gt;NtQueryObject&lt;/code&gt; function on a synchronous kernel object. Since Windows doesn’t provide any facility to get the I/O status of an object opened for synchronous access, the famous work-around consists on calling the &lt;code&gt;NtQueryObject&lt;/code&gt; in a new thread and terminating it if the timeout is reached. The support for &lt;strong&gt;Windows 10&lt;/strong&gt; and a whole new set of filaments is also on the roadmap.&lt;/p&gt;

&lt;p&gt;I would like to thank my mate &lt;a href=&quot;http://www.ildesign.es/&quot;&gt;Ilde&lt;/a&gt; (check out his portfolio) for an awesome Fibratus logo, the contributions, pull requests and encouragements from the community.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/operating%20systems/fibratus-pre-release/&quot;&gt;Fibratus Pre-Release&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on June 12, 2016.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Impressions on installation of CoreOS on a bare metal server]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/operating%20systems/impressions-on-installation-of-coreos-on-a-bare-metal-server/" />
  <id>http://rabbitstack.github.io/operating%20systems/impressions-on-installation-of-coreos-on-a-bare-metal-server</id>
  <published>2016-05-08T13:28:05+02:00</published>
  <updated>2016-05-08T13:28:05+02:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Yesterday I threw away the &lt;strong&gt;SmartOS&lt;/strong&gt; hypervisor from my home lab server. SmartOS is an excellent operating system (based on the &lt;strong&gt;Illumos&lt;/strong&gt;, an open source fork of Solaris) made for running very demanding cloud infrastructures. &lt;strong&gt;Zones&lt;/strong&gt;, &lt;strong&gt;ZFS&lt;/strong&gt;, &lt;strong&gt;DTrace&lt;/strong&gt;, the &lt;strong&gt;KVM&lt;/strong&gt; port are some of the kicking ass features built-in into SmartOS.&lt;/p&gt;

&lt;p class=&quot;image-pull-right&quot;&gt;
  &lt;img src=&quot;/images/coreos.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;If you compare it to &lt;strong&gt;Xen&lt;/strong&gt; or &lt;strong&gt;ESX&lt;/strong&gt;, it’s pretty lightweight with the memory and doesn’t require disk based installation procedure because it usually boots from an USB image. When it comes to updates, if you screw it up you can easily rollback to an old USB image. Actually, I couldn’t find any drawbacks with SmartOS, but I still got rid of it. I’ll tell you why.&lt;/p&gt;

&lt;p&gt;The rise of the containers is pushing away the boundaries of virtualization. The entire application stacks can be deployed much faster and with no virtualization overhead at all. &lt;em&gt;“Every single CPU cycle that goes to your hypervisor is money wasted”&lt;/em&gt;, a &lt;a href=&quot;http://conferences.oreilly.com/strata/big-data-conference-ca-2015/public/schedule/speaker/186329&quot;&gt;Nasser’s Manesh&lt;/a&gt; quote, summarizes pretty much the previous statements. Running containers at bare metal performance is a reality.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://coreos.com/&quot;&gt;&lt;strong&gt;CoreOS&lt;/strong&gt;&lt;/a&gt; is a distributed orchestration platform for Docker and Rkt containers. Everything on CoreOS runs in a container. CoreOS is now powering my &lt;strong&gt;HP ProLiant DL160 G6&lt;/strong&gt; server. If you are curious about the specifications, here is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;2 x Intel Xeon E5645 hex core processors&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;32 GB DDR3 RAM&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2 x 1 TB SATA disks&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;2 NIC adapters&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/hp-rack1.jpg&quot; class=&quot;image-popup&quot;&gt;
    &lt;img src=&quot;/images/hp-rack1.jpg&quot; /&gt;
  &lt;/a&gt;
&lt;/figure&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/hp-rack2.jpg&quot; class=&quot;image-popup&quot;&gt;
    &lt;img src=&quot;/images/hp-rack2.jpg&quot; /&gt;
  &lt;/a&gt;
  &lt;figcaption&gt;Horsepower of the lab&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;CoreOS installation was straightforward. I had booted the server from the CoreOS ISO image. Next, I had generated a public/private key pair on my laptop:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh-keygen -t rsa -b 2048&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The private key is used to ssh the CoreOS machine. After a small network issue, I was able to copy the public key to the server. One last thing was to create the minimal &lt;code&gt;cloud-config&lt;/code&gt; yaml configuration file.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#cloud-config&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;rabbitstack&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;ssh_authorized_keys&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;public key&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I was ready to start the installation on &lt;code&gt;/dev/sda&lt;/code&gt; disk device by executing the &lt;code&gt;coreos-install&lt;/code&gt; script.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo su -
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;coreos-install -d /dev/sda -C stable -c cloud-config.yml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/coreos-installation-start.jpg&quot; class=&quot;image-popup&quot;&gt;
    &lt;img src=&quot;/images/coreos-installation-start.jpg&quot; /&gt;
  &lt;/a&gt;
  &lt;figcaption&gt;Installing CoreOS&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;It took about 10 minutes to download the latest image and to setup the CoreOS. Really fast! I was eager to test the installation (note the user name is &lt;strong&gt;core&lt;/strong&gt;).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh -i rabbitstack core@rabbitstack&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It works like a charm! Having a CoreOS cluster is more fun, so I am planning to deploy the KVM instance on the laptop. That should be enough to try things out. I am looking forward to try &lt;a href=&quot;http://pachyderm.io/&quot;&gt;pachyderm&lt;/a&gt;, &lt;a href=&quot;http://spark.apache.org/&quot;&gt;spark&lt;/a&gt; or &lt;a href=&quot;http://storm.apache.org/&quot;&gt;storm&lt;/a&gt; in a containerized environment.
Learning about &lt;strong&gt;etcd&lt;/strong&gt;, &lt;strong&gt;fleet&lt;/strong&gt; and &lt;strong&gt;flannel&lt;/strong&gt; is going to be an exciting journey. I’ll share about the experience here - on the place where bunnies dwell.&lt;/p&gt;

&lt;p&gt;See you soon.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/coreos-installation-end.jpg&quot; class=&quot;image-popup&quot;&gt;
    &lt;img src=&quot;/images/coreos-installation-end.jpg&quot; /&gt;
  &lt;/a&gt;
  &lt;figcaption&gt;CoreOS is ready to boot&lt;/figcaption&gt;
&lt;/figure&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/operating%20systems/impressions-on-installation-of-coreos-on-a-bare-metal-server/&quot;&gt;Impressions on installation of CoreOS on a bare metal server&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on May 08, 2016.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Fibratus Video Teaser]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/operating%20systems/fibratus-video-teaser/" />
  <id>http://rabbitstack.github.io/operating%20systems/fibratus-video-teaser</id>
  <published>2016-03-21T17:24:44+01:00</published>
  <updated>2016-03-21T17:24:44+01:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Over these past months I’ve been working on &lt;strong&gt;Fibratus&lt;/strong&gt; - a tool for exploration and tracing of the Windows kernel. It’s about 90% completed, and the alpha release could be out the next month.&lt;/p&gt;

&lt;blockquote&gt;
Fibratus is being developed in my &quot;spare&quot; time, i.e. outside working hours and when I can steal some time from my wife/daughter. Full-time job is very consuming. Because of that, keep in mind the release date could be delayed.   
&lt;/blockquote&gt;

&lt;p&gt;In a nutshell, Fibratus is a tool which is able to capture the most of the &lt;strong&gt;Windows&lt;/strong&gt; kernel activity - process/thread creation and termination, file system I/O, registry, network activity, DLL loading/unloading and much more.
Fibratus has a very simple CLI which encapsulates the machinery to start the kernel event stream collector, enable filters or run the lightweight &lt;strong&gt;Python&lt;/strong&gt; modules called &lt;strong&gt;filaments&lt;/strong&gt; (more on this later). As you could see on the video teaser, when starting fibratus without command line options, it generates a lot of output. If you are interested in the particular kernel event, you can pass the &lt;code&gt;--filters&lt;/code&gt; parameter specifiying one or more events to watch. There are plans for supporting more complex filter expressions including logical operators, string matching, regular expressions, etc.&lt;/p&gt;

&lt;p&gt;Where Fibratus really shines is when combined with &lt;strong&gt;filaments&lt;/strong&gt;. As I already mentioned, the filaments allow to apply any type of custom logic on the
kernel event stream. Do you need to emit the kernel event payloads to a &lt;strong&gt;RabbitMQ&lt;/strong&gt; queue and perform aggregations, filtering, groupings or maybe you already have a remote HTTP endpoint to send the Fibratus capture? Use your favourite clients like &lt;strong&gt;pika&lt;/strong&gt; or &lt;strong&gt;requests&lt;/strong&gt;. Filaments open up the whole Python ecosystem for you. This is the perfect and non-invasive way to extend Fibratus and complement it with an already existing arsenal of security tools, penetration testing and performance monitoring tools.
Without further ado, watch the &lt;a href=&quot;https://www.youtube.com/watch?v=7Isrn-eb8Ws&quot;&gt;video teaser&lt;/a&gt; and stay tuned for the upcoming Fibratus release.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/operating%20systems/fibratus-video-teaser/&quot;&gt;Fibratus Video Teaser&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on March 21, 2016.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Of Unikernels and Containers]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/virtualization/of-unikernels-and-containers/" />
  <id>http://rabbitstack.github.io/virtualization/of-unikernels-and-containers</id>
  <published>2016-02-14T17:55:48+01:00</published>
  <updated>2016-02-14T17:55:48+01:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Containers have revolutionized the way we package and deliver software. Instead of distributing large VM images, the application is assembled in a lightweight and portable container which has its own isolated runtime environment. This is possible thanks to some Linux kernel capabilities like &lt;strong&gt;cgroups&lt;/strong&gt; (system resource accounting and limiting) and &lt;strong&gt;namespaces&lt;/strong&gt; (file system, network, process, and hostname segregation), without incurring the virtualization overhead. &lt;strong&gt;Docker&lt;/strong&gt;, &lt;strong&gt;Rkt&lt;/strong&gt;, or &lt;strong&gt;LXC/LXD&lt;/strong&gt; are some of the most popular container platforms, althought the first of them has the market dominance. In fact, FreeBSD Jails and Solaris Zones have never had the adoption
Docker is having, despite Docker is quite younger compared to Solaris Zones which had been there since 2004.&lt;/p&gt;

&lt;p class=&quot;image-pull-right&quot;&gt;
  &lt;img src=&quot;/images/runtimejs-logo.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;The container engines recently got an opponent which goes step further by pulling the entire application into the minimalistic operating system kernel. It’s called &lt;strong&gt;unikernel&lt;/strong&gt;. Once the app had been packaged, the result is an ultra thin image that can be deployed very fast on a vast majority of hypervisors! Let’s see how.&lt;/p&gt;

&lt;h3 id=&quot;language-specific-unikernels&quot;&gt;Language-specific unikernels&lt;/h3&gt;

&lt;p&gt;The proof we can’t take unikernels for granted is sky-rocketing growth of the 
language oriented unikernel projects. There are also used to be called as &lt;strong&gt;library&lt;/strong&gt; operating systems. 
&lt;a href=&quot;https://mirage.io&quot;&gt;&lt;strong&gt;MirageOS&lt;/strong&gt;&lt;/a&gt; provides &lt;strong&gt;OCaml&lt;/strong&gt; programming language runtime facilities to build high-performance network unikernels that runs on Xen hypervisor, &lt;a href=&quot;http://runtimejs.org/&quot;&gt;&lt;strong&gt;Runtime.js&lt;/strong&gt;&lt;/a&gt; mimics the Node.js non-blocking I/O model to build unikernels that run &lt;strong&gt;JavaScript&lt;/strong&gt; code and &lt;a href=&quot;http://rumpkernel.org/&quot;&gt;&lt;strong&gt;Rumprun&lt;/strong&gt;&lt;/a&gt; allows running existing POSIX applications as unikernels.&lt;/p&gt;

&lt;p&gt;But, what lies behind the motivation for unikernels?
They claim to notably reduce the attack vector. As the majority of the OS services are pulled out from the kernel (no compiler tools, no shells, only essential drivers are kept, etc.), the zero day exploits or intrusions are less likely to compromise the system itself. The entire application process is operating in the privileged CPU mode, which means no I/O waits, no competing for resources and no context switches at all! Unikernels are made for &lt;strong&gt;immutability&lt;/strong&gt;. Rather then patching the existing unikernel when a security issue is detected, the application sources are recompiled to a new unikernel and the old one is disposed.&lt;/p&gt;

&lt;p&gt;I found &lt;a href=&quot;http://osv.io&quot;&gt;&lt;strong&gt;OSv&lt;/strong&gt;&lt;/a&gt; the perfect fit to illustrate how to package any C, Node.js or Java application into unikernel. It provides the &lt;code&gt;capstan&lt;/code&gt; CLI tool to pull, build and run unikernel images. Issue the following commands to get the binary.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ CAPSTAN_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;https://raw.githubusercontent.com/cloudius-systems/capstan/master/scripts/download
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nv&quot;&gt;$CAPSTAN_URL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bash
&lt;span class=&quot;nv&quot;&gt;$ $HOME&lt;/span&gt;/bin/capstan&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We are going to build the Spring Boot microservice unikernel. Clone the github repository which contains &lt;code&gt;Capstanfile&lt;/code&gt; configuration to build the jar artifact and assemble it into unikernel image.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/bhnedo/cloud-rabbit-todo/tree/master/todo-microservice.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;todo-microservice
&lt;span class=&quot;nv&quot;&gt;$ $HOME&lt;/span&gt;/bin/capstan build&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can test the unikernel locally by running &lt;code&gt;capstan run&lt;/code&gt; or use the generated &lt;strong&gt;QEMU&lt;/strong&gt; image to boot it straight under KVM hypervisor.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;virt-install -f &lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;/.capstan/repository/todo-microservice/todo-microservice.qemu &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
-n spring-boot-unikernel --boot hd -r 1024&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Voila! The Spring Boot microservice is running happily as KVM guest. The image is about 114M (mainly because of &lt;code&gt;openjdk&lt;/code&gt; runtime and Spring Boot dependencies), and less than 80M in size when compressed!&lt;/p&gt;

&lt;h3 id=&quot;are-unikernels-production-ready&quot;&gt;Are unikernels production ready?&lt;/h3&gt;

&lt;p&gt;As every new and disruptive technology, unikernels are getting positive as also as negative feedbacks. Bryan Cantrill has elaborated an extensive &lt;a href=&quot;https://www.joyent.com/blog/unikernels-are-unfit-for-production&quot;&gt;post&lt;/a&gt; on Joyent’s blog. He is showing a pretty pesimistic attitude about unikernels. His arguments about the undebuggable nature of unikernels are highly debatable. What if unikernel’s embryonic state could be the inception of a new generation of tools engineered and adapted for unikernel monitoring? Recall how before massive container adoption there was a limited visibility into it’s internals. The traditional system tracing tools lack of functionality needed to efficently explore the containers. As a consequence, tools like &lt;a href=&quot;https://sysdig.com/let-light-sysdig-adds-container-visibility&quot;&gt;&lt;strong&gt;sysdig&lt;/strong&gt;&lt;/a&gt; has appeared.  Unikernels will definetly leave room for innovation.&lt;/p&gt;

&lt;p&gt;When it comes to security concerns, saying unikernel’s premise of being more secure isn’t valid because of hypervisor’s flaws is equally applicable to any traditional OS as well. If an attacker breaks into your infrastructure with the hope of finding the full stack OS which could allow a privilege escalation, they’ll found smaller attack surface - less entry points to compromise, less chances for &lt;strong&gt;APTs&lt;/strong&gt; to perform the lateral movement, etc.&lt;/p&gt;

&lt;p&gt;The next few years are going to be crucial for unikernels existence. I am eager to see the outcome.&lt;/p&gt;


  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/virtualization/of-unikernels-and-containers/&quot;&gt;Of Unikernels and Containers&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on February 14, 2016.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[A pragmatic approach to migration from monolithic to microservices]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/cloud/microservices/spring/a-pragmatic-approach-to-migration-from-monolithic-to-microservices/" />
  <id>http://rabbitstack.github.io/cloud/microservices/spring/a-pragmatic-approach-to-migration-from-monolithic-to-microservices</id>
  <published>2015-12-20T21:41:42+01:00</published>
  <updated>2015-12-20T21:41:42+01:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;If you recall from &lt;a href=&quot;http://rabbitstack.github.io/cloud/microservices/from-monolithic-to-cloud-native-architectures&quot;&gt;this&lt;/a&gt; post, I had stated about cloud native manifesto and the trade-off of migrating the monolithic based applications to the cloud. I have to admit it was pretty abstract and theoretical approach, but the fun starts now! We’ll see how to decompose a simple monolithic application (an already implemented &lt;em&gt;todo&lt;/em&gt; list management web application) into independent services to deliver the microservice oriented architecture.&lt;/p&gt;

&lt;h3 id=&quot;defining-the-bounded-contexts&quot;&gt;Defining the bounded contexts&lt;/h3&gt;
&lt;p&gt;When migrating a monolithic code base the first step is to identify the &lt;strong&gt;bounded contexts&lt;/strong&gt;. If you are familiar with &lt;strong&gt;DDD&lt;/strong&gt; you should also know about the after-mentioned concept. Every bounded context should be encapsulated by a separate microservice where every of them must have an independent data store. In our case that’s an unique microservice which will offer the needed business logic (the management of &lt;em&gt;todo&lt;/em&gt; lists). In a complex real world application there would be a dozen of microservices. Think about a big online store platform. We could create a microservice responsible for product operations, one for the payment life cycle management, product recommendations, a wishlist service, shopping cart, etc.&lt;/p&gt;

&lt;blockquote&gt;
The fastest way to get started with microservices on the JVM platform is through &lt;b&gt;Spring Cloud Netflix&lt;/b&gt; project which brings the Netflix components for building robust distributed systems. It provides a series of annotations for &lt;b&gt;Spring Boot&lt;/b&gt; applications to save us from heavy lifting. Unfortunately, there is no integration for XML configuration model and I&#39;m not really a Spring Boot fan (at least for now). I&#39;m looking forward to see the support for templates and declarative programming model, maybe something based on &lt;code&gt;cloud-netflix&lt;/code&gt; namespace, like &lt;code&gt; &amp;lt;cloud-netflix:eureka-server host=&quot;home&quot; port=&quot;8671&quot; endpoint=&quot;eureka&quot; /&amp;gt;&lt;/code&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;service-discovery&quot;&gt;Service discovery&lt;/h3&gt;

&lt;p&gt;The service registration and discovery are one of the essential constructs of the microservice based architecture. There are a few service discovery and coordination servers on the market, like &lt;a href=&quot;https://www.consul.io/&quot;&gt;consul&lt;/a&gt;,   &lt;a href=&quot;https://coreos.com/etcd/&quot;&gt;etcd&lt;/a&gt;, &lt;a href=&quot;https://zookeeper.apache.org/&quot;&gt;zookeeper&lt;/a&gt;, and the &lt;a href=&quot;https://github.com/Netflix/eureka&quot;&gt;Eureka&lt;/a&gt; discovery server. The embedded Eureka server can be easily deployed by placing the &lt;code&gt;@EnableEurekaServer&lt;/code&gt; annotation on the Spring Boot application. To test it yourself go to &lt;a href=&quot;https://start.spring.io/&quot;&gt;Spring Initializr&lt;/a&gt; and generate a new Spring Boot application with &lt;code&gt;Eureka Server&lt;/code&gt; starter support.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@EnableEurekaServer&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EurekaServerApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;EurekaServerApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By default, the Eureka server will attempt to register itself as client too. To disable the client side registration use this settings in &lt;code&gt;application.yml&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;eureka&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;registerWithEureka&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;fetchRegistry&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;false&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After the server has started you can navigate to &lt;code&gt;http://localhost:8761&lt;/code&gt; and explore the Eureka dashboard.&lt;/p&gt;

&lt;h4 id=&quot;creating-a-microservice&quot;&gt;Creating a microservice&lt;/h4&gt;
&lt;p&gt;We are now ready to create the actual microservice and register it within Eureka. If you still remember, the &lt;em&gt;todo&lt;/em&gt; application stores the corresponding tasks in &lt;strong&gt;MongoDB&lt;/strong&gt; and it exposes the operations via RESTful API. The microservice implementation is almost a replica of the code found in the monolithic application (see source code for details). Create another Spring Boot application skeleton with &lt;code&gt;Web&lt;/code&gt;, &lt;code&gt;MongoDB&lt;/code&gt; and &lt;code&gt;Eureka Discovery&lt;/code&gt; starters. Annotate the Spring  Boot application’s main class with &lt;code&gt;@EnableEurekaClient&lt;/code&gt; annotation to register the service instance and make it capable to query other registered services.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@EnableEurekaClient&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TodoMicroserviceApplication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TodoMicroserviceApplication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The following configuration in &lt;code&gt;application.yml&lt;/code&gt; is required to locate the Eureka server and setup the MongoDB settings, like database name, port and the host where &lt;code&gt;mongod&lt;/code&gt; process is listening for requests.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;spring&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;mongodb&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;27017&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;localhost&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;database&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;rabbit-todo&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;eureka&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;serviceUrl&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;defaultZone&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;http://localhost:8761/eureka/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once it has been deployed successfully, the microservice instance should appear in the Eureka dashboard.&lt;/p&gt;

&lt;h4 id=&quot;consuming-the-microservice&quot;&gt;Consuming the microservice&lt;/h4&gt;

&lt;p&gt;Spring Cloud Netflix makes it also trivial to access our registered microservices. An already well known &lt;code&gt;RestTemplate&lt;/code&gt; abstraction can be used to consume the service API. Use &lt;code&gt;@Autowired&lt;/code&gt; annotation to inject the template and Spring will configure it to be microservice aware (be able to locate the service by name).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RestTemplate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;restTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/todos&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RequestMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@ResponseBody&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;todos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;restTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getForObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://todo-microservice/todos&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code above queries the service registry to locate the &lt;code&gt;todo-microservice&lt;/code&gt; service and request the available &lt;em&gt;todo&lt;/em&gt; lists.&lt;/p&gt;

&lt;h3 id=&quot;gateway-and-routing&quot;&gt;Gateway and routing&lt;/h3&gt;

&lt;p&gt;Another important building block of the microservice architecture are the routing capabilities. It allows the web application to proxy the requests to the service by accessing the specified HTTP endpoint which is mapped to microservice identifier or the service registry URL. Spring Cloud ships with &lt;strong&gt;Zuul&lt;/strong&gt; JVM router which is part of Netflix component’s suite. As you could guess, we can enable the embedded &lt;strong&gt;Zuul&lt;/strong&gt; proxy by annotating the Spring Boot application’s main class with &lt;code&gt;@EnableZuulProxy&lt;/code&gt;.
The definition of routing paths can be configured in the &lt;code&gt;application.yml&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;zuul&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
       &lt;span class=&quot;l-Scalar-Plain&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;/api/v1/todo/**&lt;/span&gt;
       &lt;span class=&quot;l-Scalar-Plain&quot;&gt;serviceId&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;todo-microservice&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Any request matching the &lt;code&gt;/api/v1/todo/**&lt;/code&gt; pattern is routed to the microservice instance with
&lt;code&gt;todo-microservice&lt;/code&gt; identifier. We can rid off &lt;code&gt;TodoController&lt;/code&gt; and see the UI is working as usual.
The benefits of this pattern go from centralized authentication, audit logging, global request interception, intelligent routing scenarios, the ability to apply the refactoring on the back end without altering any client specific entry point URL.&lt;/p&gt;

&lt;h3 id=&quot;circuit-breaker&quot;&gt;Circuit breaker&lt;/h3&gt;

&lt;p&gt;The last but not least pattern we are going to dissect is the circuit breaker. The safety and fault isolation are crucial in a cloud native microservice based architecture. We don’t want the malfunctioning services to compromise the rest of the infrastructure or trigger any cascading failures. To keep the code resilient in case of service crashes, Spring Cloud integrates with Netflix &lt;strong&gt;Hystrix&lt;/strong&gt; failure isolator.
&lt;code&gt;@EnableCircuitBreaker&lt;/code&gt; annotation arms the application with Hystrix circuit breaker. It’s trivial to connect our methods to the circuit breaker by annotating them with &lt;code&gt;@HystrixCommand&lt;/code&gt; where we usually indicate the fallback method.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/todos&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RequestMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@HystrixCommand&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fallbackMethod&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;todosFallback&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;todos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;restTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getForObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://todo-microservice/todos&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;todosFallback&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;emptyList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By default, Hystrix will open the circuit and prevent the call from being made
if there are 20 failures in the timespan of 5 seconds. If you want to see it in action, navigate to Hystrix dashboard after you had stopped the microservice. Try to make some calls by refreshing the page, and you’ll see the circuit being opened. As long as we have provided the fallback method, an empty list will be rendered in the browser.&lt;/p&gt;

&lt;h3 id=&quot;microservice-patterns-in-go&quot;&gt;Microservice patterns in Go&lt;/h3&gt;

&lt;p&gt;Although the JVM-based platforms are dominating the (microservice) architecture landscape, the &lt;strong&gt;Go&lt;/strong&gt; language’s ecosystem is working its way up to enterprise.&lt;/p&gt;

&lt;p class=&quot;image-pull-right&quot;&gt;
  &lt;img width=&quot;300px&quot; height=&quot;300px&quot; src=&quot;/images/gopher.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;It’s efficient, intuitive and with built-in concurrency support. It’s compiled but still feels like coding with dynamic programming language.&lt;/p&gt;

&lt;p&gt;When it comes to microservice frameworks, I had found &lt;a href=&quot;https://github.com/go-kit/kit&quot;&gt;go-kit&lt;/a&gt; and &lt;a href=&quot;https://github.com/micro/go-micro&quot;&gt;go-micro&lt;/a&gt; the most feature rich ones. After some time of research I had opted for &lt;strong&gt;go-kit&lt;/strong&gt;, even it doesn’t offer some useful features when it comes to service registration or the more sophisticated RESTful based transport. That’s why I ended up implementing both of them. Without further ado, let’s see the code.&lt;/p&gt;

&lt;p&gt;I had advocated for service &lt;a href=&quot;https://github.com/go-kit/kit/issues/167&quot;&gt;registry capability&lt;/a&gt; in go-kit, however, here is what I came up with (although this is a minimal implementation and definitely not production ready).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ConsulRegistrator&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;consul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ConsulRegistrator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;cr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;consul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DefaultConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;consul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NewClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Agent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ServiceRegister&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;consul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AgentServiceRegistration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;:&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;strconv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Itoa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;Port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code can be found in &lt;code&gt;registry/consul&lt;/code&gt; package (see the &lt;a href=&quot;https://github.com/bhnedo/kit&quot;&gt;fork&lt;/a&gt;). Go-kit supports the HTTP transport out of the box. Although, there’s no way to create truly RESTful API as one we have built on Spring service. I figured out it was quite easy to wrap an existing go-kit endpoints with &lt;strong&gt;Gorilla&lt;/strong&gt; routes.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Demux&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Ctx&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Context&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Mux&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Router&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;demux&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Demux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NewRoute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;endpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Endpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dec&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;httptransport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DecodeRequestFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;httptransport&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NewServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;demux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;dec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;encoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ResponseWriter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ServeHTTP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;demux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Mux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;HandleFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;route&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;encoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writer&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ResponseWriter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{})&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NewEncoder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;putting-the-pieces-together&quot;&gt;Putting the pieces together&lt;/h4&gt;

&lt;p&gt;In order to build a functional microservice adhere to these steps:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create an interface / implementation which represents the business requirements for your service.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TodoService&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;FindAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([]&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TodoServiceImpl&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;TodoRepo&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TodoRepository&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TodoServiceImpl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FindAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;([]&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TodoRepo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FindAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Declare the request and response structs for every method in our interface.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FindAllRequest&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FindAllResponse&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Todos&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Todo&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&amp;quot;todos&amp;quot;`&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Err&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;`json:&amp;quot;err,omitempty&amp;quot;`&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Expose the endpoints. Every endpoint encapsulates the RPC method of our service. Having the Gorilla router integrated inside go-kit makes it trivial to publish the service interface.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;FindAllEndpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;TodoService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;endpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Endpoint&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vars&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FindAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rpc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FindResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{[]&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;rpc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FindResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;dmx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;demux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Demux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Mux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mux&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NewRouter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()}&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;dmx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NewRoute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/todos&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FindAllEndpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;GET&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;decodeFindAllRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Finally, register the service in Consul discovery server. This allows the service instance to be discovered from Spring Boot app using the &lt;strong&gt;Spring Cloud Consul&lt;/strong&gt; integrations.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-go&quot; data-lang=&quot;go&quot;&gt;&lt;span class=&quot;nx&quot;&gt;cr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;registrator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ConsulRegistrator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;todo-microservice&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Fatal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;the-synergy-of-a-polyglot-ecosystem&quot;&gt;The synergy of a polyglot ecosystem&lt;/h3&gt;

&lt;p&gt;The microservice architectures are often perceived as the next generation of &lt;strong&gt;SOA&lt;/strong&gt;. I would also call it &lt;strong&gt;SOA on steroids&lt;/strong&gt;. Well, in fact, they have a lot in common. Traditionally, most of the SOA services had been using &lt;strong&gt;SOAP&lt;/strong&gt; as a standard data interchange protocol. Nowadays, the SOA based services can also communicate over &lt;strong&gt;REST&lt;/strong&gt;, just like their microservice counterparts. We already know the microservices are language agnostic pieces. SOA based services can also coexist in a polyglot environment which is often orchestrated by &lt;strong&gt;ESB&lt;/strong&gt; (Enterprise Service Bus) or the message broker.&lt;/p&gt;

&lt;p&gt;Unlike microservices, SOA services are not aware of the single responsibility principle. The size and scope of the latter is measured in &lt;strong&gt;LOC&lt;/strong&gt; (Lines of Code), not the functionalities they try to accomplish. Another subtle difference between microservices and SOA are their operational requirements. In a microservice world the &lt;strong&gt;PaaS&lt;/strong&gt; solution and the &lt;strong&gt;DevOps&lt;/strong&gt; culture are a must. The services have to be replicated over multiple nodes and they have to be able to scale in question of seconds. Another common practise is the packaging of microservices inside isolated execution environments known as containers (here is where Docker excels as the most popular implementation in the container ecosystem). From the point of view of &lt;strong&gt;technical&lt;/strong&gt; changes, the operational requirements may be the most challenging factor for organizations when it comes to migrating from monolithic to microservice architectures.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/cloud/microservices/spring/a-pragmatic-approach-to-migration-from-monolithic-to-microservices/&quot;&gt;A pragmatic approach to migration from monolithic to microservices&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on December 20, 2015.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Spring MVC + Angular = Hasta la vista JSP!]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/angularjs/spring/mongodb/spring-mvc-angular-hasta-la-vista-jsp/" />
  <id>http://rabbitstack.github.io/angularjs/spring/mongodb/spring-mvc-angular-hasta-la-vista-jsp</id>
  <published>2015-06-28T21:38:45+02:00</published>
  <updated>2015-06-28T21:38:45+02:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;
In a sea of client side MVC web frameworks, &lt;strong&gt;Angular&lt;/strong&gt; is becoming the most prominent one due to its increasing popularity. Unlike other MVC frameworks (Backbone, Ember),
Angular uses HTML as the templating language and also allow us to build our own HTML directives that can be interpreted by the browser. One of the unique Angular&#39;s features are the dependency injection mechanisms which promote code reuse and make it easier to assemble the web application.
&lt;/p&gt;

&lt;p&gt;
In this post we will focus on how to build a simple web application to highlight the most important building blocks every modern Angular application should have. So, let&#39;s start.
&lt;/p&gt;

&lt;h3&gt;What we are going to build?&lt;/h3&gt;

&lt;p&gt;I bet you had already read a lot of tutorials where a &lt;i&gt;todo&lt;/i&gt; like application was used to illustrate the basic concepts. I wanted to go step further and build a real time collaborative web application to manage the &lt;i&gt;todo&lt;/i&gt; lists. The full source code is hosted on the &lt;a href=&quot;https://github.com/bhnedo/rabbit-todo&quot; target=&quot;_blank&quot;&gt;github&lt;/a&gt;. Even simple, the application uses rather complete technology stack.
&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;b&gt;MongoDB&lt;/b&gt;, document oriented NoSQL data store.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;Spring&lt;/b&gt;, the Spring MVC framework for building the RESTful web services. Spring Data had been used to simplify data access and persistence through Mongo repositories.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;SockJS&lt;/b&gt;, websockets to make the realtime application.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;Bourbon/Refills&lt;/b&gt;, is the SaSS based framework with very cool components and responsive grids.&lt;/li&gt;
  &lt;li&gt;&lt;b&gt;Bower&lt;/b&gt; for dependency management of web artifacts.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/rabbit-todos.png&quot; class=&quot;image-popup&quot;&gt;
    &lt;img src=&quot;/images/rabbit-todos.png&quot; /&gt;
  &lt;/a&gt;
  &lt;figcaption&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/rabbit-todo-popup.png&quot; class=&quot;image-popup&quot;&gt;
    &lt;img src=&quot;/images/rabbit-todo-popup.png&quot; /&gt;
  &lt;/a&gt;
  &lt;figcaption&gt;rabbit-todo in action&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3&gt;Implementation&lt;/h3&gt;
&lt;h4&gt;Going persistent with Mongo&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;Spring Data&lt;/b&gt; makes it extremely easy to access and manipulate the new generation data access technologies as well as relational databases, providing the well known Spring programming model such as POJOs, templates, etc. For instance, our &lt;code&gt;Todo&lt;/code&gt; entity could be modeled as follows. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Document&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Todo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Id&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;creationDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tasks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ArrayList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;();&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;@Document&lt;/code&gt; annotation identifies the domain object to be saved in Mongo. Spring Data provides the &lt;code&gt;MongoTemplate&lt;/code&gt; abstraction we could use to query and manipulate the data store. However, a more consistent and idiomatic approach can be achieved with the data repositories.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TodoRepository&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MongoRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That&#39;s the whole code needed to enable the basic CRUD operations on &lt;i&gt;Todo&lt;/i&gt; documents. Magic! Isn&#39;t it? It is also necessary to activate the repository scanning in the Spring XML configuration file.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;mongo:repositories&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;base-package=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;org.rabbitstack.rabbit.todo.data.repository&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Serving up the data via REST&lt;/h4&gt;

&lt;p&gt;The next step is to expose the HTTP endpoints the will be called from Angular to get &lt;i&gt;todo&lt;/i&gt; lists, create new ones, change tasks priority or mark them as done. That won&#39;t be a big deal. Spring MVC &lt;b&gt;controllers&lt;/b&gt; allow us the create lightweight REST services and map the methods with requests using the &lt;code&gt;@RequestMapping&lt;/code&gt; annotation. Let&#39;s see some code. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@Controller&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;api/v1&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TodoController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TodoRepository&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;todoRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     * Gets all todo lists.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     * @return a JSON array of todo lists&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;     */&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;/todos&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RequestMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@ResponseBody&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Todo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;todoRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;findAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That&#39;s pretty straightforward. We have annotated the &lt;code&gt;TodoController&lt;/code&gt; class with &lt;code&gt;@Controller&lt;/code&gt; and &lt;code&gt;@RequestMapping&lt;/code&gt; annotations, so the Spring knows this class will act as the controller. Note how the controller receives the reference of the repository and how the &lt;code&gt;findAll&lt;/code&gt; method is called to get all created todos in Mongo. When the client (browser) requests the &lt;code&gt;api/v1/todos&lt;/code&gt; endpoint the &lt;code&gt;todos&lt;/code&gt; method will be triggered to respond with the JSON array of todo lists in the response body.&lt;/p&gt;

&lt;h4&gt;Pushing with web sockets&lt;/h4&gt;

&lt;p&gt;Every time a user adds a new todo list, delete the task or performs any other action, we want that changes to propagate to the rest of the users. Instead of pulling for the changes using the traditional XHR calls, the websockets open a bidirectional full duplex channel with the server. Once the connection had been established they can interchange data in real time.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Spring Websocket&lt;/b&gt; provides a SockJS endpoint which can be enabled with the following XML configuration.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;websocket:message-broker&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;application-destination-prefix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/todo&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;websocket:stomp-endpoint&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/io&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;websocket:sockjs&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/websocket:stomp-endpoint&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;websocket:simple-broker&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;prefix=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/topic&amp;quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/websocket:message-broker&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will boot up a broker on &lt;code&gt;/io&lt;/code&gt; endpoint so the clients can connect over the Stomp protocol. Here we also tell the Spring to use &lt;b&gt;SockJS&lt;/b&gt; websocket emulation. If web browser doesn&#39;t support web sockets, SockJS will choose another transport.&lt;/p&gt;

&lt;p&gt;On the client side, the Angular service is responsible for establishing the connection with websocket server upon application bootstrap.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todoApi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;stomp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SockJS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;endpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;defer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$q&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;defer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;todoApi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stomp&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Stomp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;over&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;todoApi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stomp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;defer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;resolve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;defer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;topic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;todoApi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stomp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;topic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;$rootScope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;subscribe&lt;/code&gt; function registers a callback that is called every time the content is being pushed from the server. For sending the messages to a subscribed topic, Spring provides the &lt;code&gt;SimpMessagingTemplate&lt;/code&gt; template. See the code below. Upon the creation of a &lt;i&gt;todo&lt;/i&gt; list &lt;code&gt;convertAndSend&lt;/code&gt; will serialize a &lt;code&gt;Todo&lt;/code&gt; object to JSON and send it to the browser.


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * Creates a new todo list.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; * @param todo list to be created&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@RequestMapping&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot;/todos&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RequestMethod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ResponseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;NO_CONTENT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createTodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Valid&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@RequestBody&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Todo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setCreationDate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;LocalDateTime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;atZone&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ZoneId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;systemDefault&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toInstant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()));&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;forEach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                        &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;randomUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Todo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;todoRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;messagingTemplate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;convertAndSend&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;/topic/todos/created&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On the Angular side, we inject the &lt;code&gt;TodoService&lt;/code&gt; into the controller, and then call the &lt;code&gt;connect&lt;/code&gt; method to initiate the connection and register the callbacks that are triggered when message is received from the server.&lt;/p&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;todoService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/io&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;todoService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;/topic/todos/created&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fromJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Consuming the REST API&lt;/h4&gt;

&lt;p&gt;Angular ships with the built in &lt;code&gt;$http&lt;/code&gt; service that can be used to perform requests. For example to create a new &lt;i&gt;todo&lt;/i&gt; list, we can call the &lt;code&gt;post&lt;/code&gt; method.&lt;/p&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;API_ENDPOINT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                              &lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                              &lt;span class=&quot;nx&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Similarly, we can send a GET request like this.&lt;/p&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;API_ENDPOINT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This function returns a special promise object which encapsulates the asynchronous action. In the controller we wait for the operation to complete, and then we provide the scope with the result.&lt;/p&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;todoService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;todos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Rendering the views&lt;/h4&gt;

&lt;p&gt;As we already stated, Angular uses the HTML templates to build up the views with the set of well known directives. They provide bidirectional data binding, iterations, conditional rendering, event handlers, etc. Here is a part of the view which renders &lt;i&gt;todo&lt;/i&gt; lists.&lt;/p&gt;  

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;flex-boxes&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;flex-box&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-repeat=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;todo in todos&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
		 &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;delete&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;i&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-click=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;deleteTodo(todo.id)&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;icon ion-close-circled&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;flex-title uppercase&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;

                &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;todo-description&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/angularjs/spring/mongodb/spring-mvc-angular-hasta-la-vista-jsp/&quot;&gt;Spring MVC + Angular = Hasta la vista JSP!&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on June 28, 2015.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Spring Boot or Not to Spring Boot?]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/spring/spring-boot-or-not-to-spring-boot/" />
  <id>http://rabbitstack.github.io/spring/spring-boot-or-not-to-spring-boot</id>
  <published>2015-05-16T21:48:42+02:00</published>
  <updated>2015-05-16T21:48:42+02:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;
For me, it could be difficult to imagine the inception of a medium / big Java project without using Spring framework. There is a myriad of reasons for that. It makes the code base clean and loosely coupled. The whole plethora of abstractions provided by Spring makes the life easier when dealing with JDBC, JMS, NoSQL datastores, transaction management, AOP programming, etc. It&#39;s modular, lightweight, opensource and has a vibrant community. It can order you a pizza. Not actually, but however, it&#39;s &lt;i&gt;de facto&lt;/i&gt; J2EE framework (anybody heard about Seam?).
&lt;/p&gt;

&lt;p class=&quot;image-pull-right&quot;&gt;
	&lt;img src=&quot;/images/spring-boot-logo.png&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;
I have been using Spring for almost seven years and had followed it&#39;s evolution, the born of new subprojects and the overall expansion of the Spring ecosystem. Spring had been often criticized for being a XML metadata configuration oriented framework. Then, &lt;b&gt;Spring JavaConfig&lt;/b&gt; has appeared. Its goal was to focus on a Java centric Spring configuration through different annotations like &lt;code&gt;@Configuration&lt;/code&gt;, &lt;code&gt;@Bean&lt;/code&gt; and the &lt;code&gt;AnnotationConfigApplicationContext&lt;/code&gt; implementation. Spring JavaConfig was a trampoline for what now is known as &lt;b&gt;Spring Boot&lt;/b&gt;.
&lt;/p&gt;

&lt;p&gt;
Spring Boot provides an abstraction layer on top of Spring core and the rest of subprojects under the Spring umbrella, with no need to deal with XML configuration files, the pattern known as &lt;b&gt;CoC&lt;/b&gt; (Convention Over Configuration). In this post I would like to expose the pros and cons of Spring Boot.
&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;
&lt;strong&gt;NOTE:&lt;/strong&gt; These are my very personal and humble opinions whose might not be coherent, and off course, it doesn&#39;t mean you have to agree with them.
&lt;/p&gt;

&lt;h3&gt;Pros&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Quick up and running of the standalone and containerless Spring applications. You just assemble the jar artifact which comes with an embedded Tomact, Jetty or Undertow application server and you are ready to go.&lt;/li&gt;
  &lt;li&gt;Simplified dependency management through the &lt;b&gt;starter&lt;/b&gt; POMs.&lt;/li&gt;
  &lt;li&gt;Visibility into your application internals. Spring Boot provides the HTTP endpoints to get detailed metrics about the application inner working, health status, etc. SSH shell and the &lt;b&gt;jtop&lt;/b&gt; are really awesome.&lt;/li&gt;
  &lt;li&gt;For the Java purists and the haters of XML configuration files, the good news is there are no XML at all. The beans are initialized, configured and wired automagically.&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;https://start.spring.io/&quot;&gt;Spring Initializr&lt;/a&gt; provides a project generator to make you productive with the certain technology stack from the beginning. You can create a skeleton project with web, data access (relational and NoSQL datastores), cloud, or messaging support.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Cons&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;If you are new to Spring and want to learn how the dependency injection, AOP programming, and proxies work, starting with Spring Boot is not a good choice. Spring Boot hides the most of these details from you.&lt;/li&gt;
  &lt;li&gt;I find the Java Config programming model is more intrusive with your application code base. If the &lt;b&gt;IoC&lt;/b&gt; principle is about delegating the lifecycle and the instantiation of the classes to external entity (the container), then, the principle is being violated. It’s the programmer itself who is responsible for creating the required beans. Moreover, if the implementation of your class changes, you are forced to change it in your code. With XML oriented programming model it would be enough to update the bean definition. The introduction of Spring XML namespaces had greatly simplified the configuration files, so there is one less reason to hate them.&lt;/li&gt;
  &lt;li&gt;If you are a control freak, I doubt Spring Boot would fit your needs.&lt;/li&gt;
  &lt;li&gt;Spring Boot sticks good with microservices. The Spring Boot artifacts can be deployed directly into Docker containers. In a large and monolithic based applications, I wouldn’t encourage you to use Spring Boot.&lt;/li&gt;
  &lt;li&gt;If you are not familiarized with other projects of the Spring ecosystem (Spring Integration, Spring AMQP, Spring Security, etc), using them from Spring Boot will make you miss a lot of concepts, which by the other hand you would acquire if you had started using them independently.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Seven years ago, Spring framework had changed my perception on software development. Nowdays, it’s being the essential part of my day to day programmer’s life. I still feel very comfortable with XML based configuration, or the hybrid combination of JavaConfig and XML. That doesn’t mean things won’t change, and make the tip to scales in favor of Spring Boot.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/spring/spring-boot-or-not-to-spring-boot/&quot;&gt;Spring Boot or Not to Spring Boot?&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on May 16, 2015.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[From monolithic to cloud-native architectures]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/cloud/microservices/from-monolithic-to-cloud-native-architectures/" />
  <id>http://rabbitstack.github.io/cloud/microservices/from-monolithic-to-cloud-native-architectures</id>
  <published>2015-05-11T22:29:25+02:00</published>
  <updated>2015-05-11T22:29:25+02:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;The software industry is moving fast - that fact should be crystal clear. What now is considered as the state of the art model for software development and deployment, in a few years it usually becomes business agility barrier for the most organizations. The lack of agility limits the innovation factor and response time needed for the organizations to react, correct or deliver the business values before their competitors. The era of cloud computing has brought a myriad of new choices for software delivery. Computing resources, storage and networks can be provisioned elastically and on demand. Application can be scaled in question of seconds and the most of the &lt;strong&gt;PaaS&lt;/strong&gt; solutions also provide proactive application monitoring, recovery, load balancing and centralized log aggregation.&lt;/p&gt;
&lt;p&gt;When talking about scalability, cloud centric and monolithic architectures, there are few issues and discrepancies that stand out immediately. As they are being part of a large code base, monolithic architectures can&#39;t be partitioned into independent deployable components. When scaling the monolithic based application we must scale all of it&#39;s components, and not just the ones under heavy load. Moreover, the componentes often have different functional requirements - while some might be more CPU intensive, the other might be I/O bounded. Due to the lack of this autonomous and componentization capable nature, the fault isolation can&#39;t be achieved, so the partial failures will usually cause total service downtime.&lt;/p&gt;
&lt;p&gt;Cloud-native architectures attempt to solve the problems above by decomposing the monolithic systems into self-sufficient units called &lt;strong&gt;microservices&lt;/strong&gt;. They encapsulate the minimal business  capability into single responsibility artifacts under assumption of performing that single capability in the optimal fashion. I had an opportunity to assist to the &lt;a href=&quot;http://www.springio.net/&quot; target=&quot;_blank&quot;&gt;Spring I/O&lt;/a&gt; conference in Barcelona, and almost all speakers had mentioned that ubiquitous word - microservice. They were some very prominent and interesting talks, but in the end all of them had tended to converge in an after-mentioned term. Projects like &lt;b&gt;Spring Boot&lt;/b&gt; and &lt;b&gt;Spring Cloud&lt;/b&gt; are already bringing the Spring programming model into the world of cloud based applications.
&lt;/p&gt;
&lt;p&gt;
Cloud-native architectures and microservices seem to be the logical evolution of the software engineering and delivery. The benefits of microservices include other aspects like parallelizing the workflow of development life cycle by dividing the bounded contexts between developers instead of assigning the whole team to the same sandbox, decoupling from the technology stack (for instance we could have one microservice written in Java, another one in Ruby or Python, and so on), implementing new business requirements independently from the rest of the system (in a monolithic application it&#39;s required to redeploy the entire application when one part is changed). As we will see, the migration to the cloud implies more than purely technical changes.
&lt;/p&gt;

&lt;h2&gt;Moving to the cloud&lt;/h2&gt;

&lt;p&gt;As stated in Matt Stine&#39;s book &lt;a href=&quot;http://pivotal.io/platform-as-a-service/migrating-to-cloud-native-application-architectures-ebook&quot; target=&quot;_blank&quot;&gt;Migrating to cloud-native application architectures&lt;/a&gt;, for the organizations to successfully adopt the cloud-native approach, apart from &lt;b&gt;technical&lt;/b&gt; changes, &lt;b&gt;cultural&lt;/b&gt; and &lt;b&gt;organizational&lt;/b&gt;
changes are also essentials. It&#39;s not enough to introduce the agile practices in our team, if the organization itself is stuck in a traditional process management.
To establish an analogy, think about the following quote I have borrowed from &lt;a href=&quot;http://www.imdb.com/title/tt0285736/&quot; target=&quot;_blank&quot;&gt;Milky Way&lt;/a&gt; movie:
&lt;blockquote&gt;You can&#39;t focus on healing one organ and take for granted the rest of the organism.&lt;/blockquote&gt; The similar approach can be applied to the organizations. Traditionally, an organization can be divided into various units called &lt;b&gt;silos&lt;/b&gt;, each of them operating inside isolated contexts, with specific vocabularies, practices, habits and communication kinds. The system administration silo tends to keep an IT ecosystem durable and available, sticking to established SLAs and performance indicators. The changes generated by development team are not very welcome as they tend to introduce risks into the system. Therefore, as long as changes can&#39;t be introduced safely, the speed of innovation and delivery of new business values are governed by heavyweight processes that are clashing directly with cloud-native principles. The &lt;a href=&quot;http://en.wikipedia.org/wiki/DevOps&quot; target=&quot;_blank&quot;&gt;DevOps&lt;/a&gt; is an emerging movement which goal is to establish the collaboration lines between development and the IT operations which can lead to continuous value delivery without compromising the performance, safety, availability and speed of innovation.&lt;/p&gt;

&lt;p&gt;The silos are dissolved and recreated into a totally new organizational structure with shared agile practices, vocabulary and communication channels. Instead of focusing on processes, we focus on persons as the foundational aspect of change and innovation.&lt;/p&gt;

&lt;p&gt;The development team can provision the required infrastructure for the application deployment using a simple API to create virtual machine instances, storage and network topologies. That way the teams are considered as autonomous entities coexisting inside a totally decentralized ecosystem. When new members are incorporated into the team, they don&#39;t have to deal with the enormous codebase since separated bounded contexts can be used to reduce the coordination overhead and make developers productive from the beginning. The teams can cooporate independently using the REST API based collaboration model and deploy new functionality in a relaxed harmony with the rest of the teams. &lt;/p&gt;

&lt;h2&gt;Distributed patterns&lt;/h2&gt;

&lt;p&gt;The migration to the cloud-native architectures comes at the cost of complexity involved in coordinating the distributed ecosystem. As you will see some new infrastructure blocks must be build as trade off to adoption of cloud-native principles. The series of the well known distributed patterns will make ascending to the cloud less painful.&lt;/p&gt;

&lt;h3&gt;API Gateway&lt;/h3&gt;

&lt;p&gt;The diversity of clients that interact with the cloud based applications can vary from mobiles to desktop systems and gaming consoles. Some of the after-mentioned clients run in a constrained environment where aspects like battery life or network bandwidth are much appreciated. If a client needs to query a tons of microservices in order to satisfy the UI needs, that would cause a lot of problems like latency and exaggerated number of round trips. To address this issue, the API gateway pattern provides a single entry point for the specific clients, where requests are routed to one or propagated to multiple microservices. As the request travels down the pipeline the responses are aggregated concurrently  by each microservice and then returned to the client.&lt;/p&gt;
&lt;figure&gt;
  &lt;a href=&quot;/images/api-gateway.png&quot; class=&quot;image-popup&quot;&gt;
    &lt;img src=&quot;/images/api-gateway.png&quot; /&gt;
  &lt;/a&gt;
  &lt;figcaption&gt;&lt;b&gt;Figure 1.&lt;/b&gt; API Gateway pattern&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3&gt;Service discovery / registration&lt;/h3&gt;

&lt;p&gt;Service discovery pattern acts as a repository of microservice instances. In opposite to the traditional distributed system deployments, cloud-based environments  are characterized by ephemeral resources that are created and disposed in a elastic manner. &lt;a href=&quot;http://www.docker.com/&quot; target=&quot;_blank&quot;&gt;Docker&lt;/a&gt; and &lt;a href=&quot;https://linuxcontainers.org&quot; target=&quot;_blank&quot;&gt;LXC&lt;/a&gt; have popularized containers as a new medium of application distribution inside the lightweight portable units that can be provisioned much faster then virtual machine instances. The number and locations of instances changes dynamically and every time the new microservice is deployed, the binding is performed on the random dynamic IP address and port. For the client to successfully contact the microservice, it must query the service registry which in order resolves the location of the microservice.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/service-registry.png&quot; class=&quot;image-popup&quot;&gt;
    &lt;img src=&quot;/images/service-registry.png&quot; /&gt;
  &lt;/a&gt;
  &lt;figcaption&gt;&lt;b&gt;Figure 2.&lt;/b&gt; Service registry in conjunction with API gateway pattern&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;When microservice is deployed it emits an autodiscover request to the service registry. Service registry periodically sends a heartbeat to the microservice. If after a specified timeout the microservice doesn&#39;t respond it is automatically removed from the service registry.&lt;/p&gt;

&lt;h3&gt;Routing / load balancing&lt;/h3&gt;

&lt;p&gt;Intelligent routing and load balancing across multiple microservices is a must in a cloud distributed environments. The router / load balancer is another component of a cloud distributed ecosystem which is responsible for querying the service registry and forwarding the requests to the appropiated microservice instances. That scenario is shown on figure 3.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/load-balancer.png&quot; class=&quot;image-popup&quot;&gt;
    &lt;img src=&quot;/images/load-balancer.png&quot; /&gt;
  &lt;/a&gt;
  &lt;figcaption&gt;&lt;b&gt;Figure 3.&lt;/b&gt; Load balancer pattern&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3&gt;Circuit breaker&lt;/h3&gt;
&lt;p&gt;In a cloud-native architectures it is essential to guarantee the fault tolerance and prevent cascading failures when one of the microservices comes out of control. As we already mentioned, packaging and partitioning the microservices into Linux containers will prevent a nasty microservice to consume an entire machine&#39;s resources or affect another container. That is a wise doze of defense at infrastructure level. But what&#39;s about the application level protection? The circuit breaker pattern is based on the premise that unhealthy microservices wouldn&#39;t have to cause the interruption of other services. Every RPC call that is being routed to an unhealthy microservice shouldn&#39;t continuously punch the service making it impossible to recover. The circuit breaker behavior can be compared to our home circuit breaker that prevents the current from damaging devices when it exceeds the certain threshold.&lt;/p&gt;
&lt;p&gt;Similarly, the circuit breaker pattern counts the number of failed calls, and when the number is above the specified threshold, it transitions into the open state and make the call to fail immediately. Once the service has recovered, the circuit breaker is closed and the calls can be executed successfully.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/cloud/microservices/from-monolithic-to-cloud-native-architectures/&quot;&gt;From monolithic to cloud-native architectures&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on May 11, 2015.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Lua Rocks!]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/lua/lua-rocks/" />
  <id>http://rabbitstack.github.io/lua/lua-rocks</id>
  <published>2015-04-08T00:21:29+02:00</published>
  <updated>2015-04-08T00:21:29+02:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;For the ones used to read my large posts, I am sorry to disappoint you. This time it will be a very short post about a thing that recently called my attention and I want to share it with you. After I had discovered &lt;a href=&quot;http://luajit.org/luajit.html&quot; target=&quot;_blank&quot;&gt;LuaJIT&lt;/a&gt;, I am thinking seriously about embracing the Lua language and incorporating it into my arsenal of programming languages. LuaJIT is a high performance &lt;i&gt;Just-In-Time&lt;/i&gt; compiler for the Lua programming language which is compatible with all major desktop and mobile operating systems, processor&#39;s architectures, gaming consoles, and more. It makes it a perfect fit for the IoT. As far as the interpreter is written in &lt;strong&gt;assembly&lt;/strong&gt; language, it beats other dynamic languages in most benchmarks. As a language itself, Lua is very flexible and lightweight, and syntactically it reminds me of Ruby (at least the control flow structures). One of the things I missed at first was the absence of classes, as long as Lua is not really an object-oriented programming language, but it is quite easily to build your own abstraction using tables and metatables.
&lt;/p&gt;
&lt;p class=&quot;image-pull-right&quot;&gt;
	&lt;img src=&quot;/images/lua.png&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;
I have started using Lua for the operating system statistics aggregation and centralization which are provided by &lt;a href=&quot;https://github.com/draios/sysdig&quot; target=&quot;_blank&quot;&gt;Sysdig&lt;/a&gt; tool. At the very top of Sysdig there is a nice layer which enable us to write small Lua scripts called &lt;i&gt;chisels&lt;/i&gt;. As a new instance of sysdig is required to run every chisel and  as I couldn&#39;t find an elegant way to collect the stats from the chisel&#39;s output, I decided to build a seperate component that aggregates the necessary stats in JSON format and stream them over &lt;a href=&quot;http://zeromq.org/&quot; target=&quot;_blank&quot;&gt;ZeroMQ&lt;/a&gt;. This way, a single instance of sysdig can be used to obtain all stats and they can be be easily consumed from any programming language (which has bindings for ZeroMQ).
&lt;/p&gt;
&lt;p&gt;
Lua also has it&#39;s own package manager, &lt;a href=&quot;https://rocks.moonscript.org/&quot; target=&quot;_blank&quot;&gt;luarocks&lt;/a&gt;.
&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/lua/lua-rocks/&quot;&gt;Lua Rocks!&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on April 08, 2015.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Running a Storm cluster on SmartOS]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/storm/virtualization/running-a-storm-cluster-on-smartos/" />
  <id>http://rabbitstack.github.io/storm/virtualization/running-a-storm-cluster-on-smartos</id>
  <published>2015-03-21T21:35:37+01:00</published>
  <updated>2015-03-21T21:35:37+01:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;In a time when Storm was still developed and maintained by Twitter, I was working on small experiments in local cluster mode by processing social data from Facebook. It rained a lot since then, and Storm is now an active project under Apache umbrella. The curiosity of mine was eager to see how would the Storm operate in multi node deployment, so I decided to build a cluster on SmartOS hypervisor. I really adore SmartOS. It is so lightweight and it loads from the USB media. While the other hypervisors I&#39;ve tried (XenServer, ESX) reserved the &quot;huge&quot; amount of RAM (on my 24 GB server XenServer was taking almost 4GB for the Dom0), SmartOS needs 200-300 MB of RAM. The provisioning of new virtual machines is really fast. You can run an OS level virtualization units called zones, or the KVM based virtual machines to run almost any legacy operating system (Linux, Windows, FreeBSD). You can learn more about SmartOS &lt;a href=&quot;https://wiki.smartos.org/display/DOC/Home&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;p class=&quot;image-pull-right&quot;&gt;
	&lt;img src=&quot;/images/smartos+storm.png&quot; /&gt;
&lt;/p&gt;
&lt;blockquote&gt;
Are you new to Storm and you don&#39;t know what this is all about? Well apart from being a meteorological phenomenon, Storm is a distributed fault tolerant and realtime data stream processing platform. What Hadoop is for batch processing, Storm is for realtime data processing. There are two different type of nodes in Storm. The master node, also called as &lt;code&gt;nimbus&lt;/code&gt; is responsible for assigning, monitoring and distributing tasks to worker or &lt;code&gt;supervisor&lt;/code&gt; nodes in Storm terminology. In between there is a &lt;code&gt;ZooKeeper&lt;/code&gt; node which is responsible for coordination and auto discovery of the nodes. The computation workflow is encapsulated into the unit called topology. It is basically a graph of &lt;code&gt;spouts&lt;/code&gt;, components that represent the source of data streams and &lt;code&gt;bolts&lt;/code&gt; which do some sort of processing on input streams and often generate new streams. For example we could have a spout which consumes Apache log messages from RabbitMQ queue, and one or more bolts which apply some kind of transformation, aggregation, or filtering logic. As our business demand increases, we also want to process a ton of logs from Tomcat and Nginx and one worker node won&#39;t deal well with it. No problem! Just spawn a desired number of worker nodes to scale horizontally, and Storm will make sure data processing is balanced and distributed accross the nodes. And what if one of the worker node fails? Don&#39;t panic! Storm is able to reschedule and assign the task to one of the healthy nodes ensuring fault-tolerant exactly-once messaging semantics processing. The image below shows the components of a Storm cluster.
&lt;/blockquote&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/storm.jpg&quot; class=&quot;image-popup&quot;&gt;
    &lt;img src=&quot;/images/storm.jpg&quot; /&gt;
  &lt;/a&gt;
  &lt;figcaption&gt;Storm cluster&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h3&gt;Preparing SmartOS VMs&lt;/h3&gt;

&lt;p&gt;Let’s first prepare the specifications for our SmartOS KVM virtual machines. I’ll use the Centos7 dataset to spawn Storm nodes. Find and import the image that corresponds to &lt;code&gt;centos-7&lt;/code&gt; dataset.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;imgadm avail
...
c8c59f3c-a343-11e4-8e39-9360169bcaae  steelapp-developer      14.3.0      smartos  2015-01-23T21:07:03Z
02dbab66-a70a-11e4-819b-b3dc41b361d6  centos-7                &lt;span class=&quot;m&quot;&gt;20150128&lt;/span&gt;    linux    2015-01-28T16:23:36Z
5becfd74-a70d-11e4-93a6-470507be237c  centos-6                &lt;span class=&quot;m&quot;&gt;20150128&lt;/span&gt;    linux    2015-01-28T16:47:34Z
5f41692e-a70d-11e4-8c2d-afc6735144dc  debian-7                &lt;span class=&quot;m&quot;&gt;20150128&lt;/span&gt;    linux    2015-01-28T16:47:40Z
...
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;imgadm import 02dbab66-a70a-11e4-819b-b3dc41b361d6&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The cluster will consist of these nodes:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;1 &lt;strong&gt;ZooKeeper&lt;/strong&gt; node with 1024 MB RAM and 1 VCPUs&lt;/li&gt;
	&lt;li&gt;1 &lt;strong&gt;Nimbus&lt;/strong&gt; node with 3048 MB RAM and 2 VCPUs&lt;/li&gt;
	&lt;li&gt;3 &lt;strong&gt;Supervisor&lt;/strong&gt; nodes with 4096 MB RAM and 3 VCPUs&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is a specification file for ZooKeeper node (you will need to change the network settings to match your environment). Save it as &lt;code&gt;centos7-zookeeper.json&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;brand&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;kvm&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;resolvers&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;8.8.4.4&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;ram&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1024&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;vcpus&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;alias&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;zookeeper/0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;nics&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;nic_tag&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;ip&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;192.168.1.11&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;netmask&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;255.255.255.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;gateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;192.168.1.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;virtio&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;primary&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;disks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;image_uuid&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;02dbab66-a70a-11e4-819b-b3dc41b361d6&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;boot&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;virtio&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;size&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The specifications for the Nimbus node is as follow. For the supervisor nodes we will basically use the same spec with some minor modifications.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;brand&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;kvm&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;resolvers&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;8.8.4.4&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;ram&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;3048&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;alias&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;nimbus/0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;vcpus&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;nics&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;nic_tag&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;ip&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;192.168.1.12&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;netmask&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;255.255.255.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;gateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;192.168.1.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;virtio&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;primary&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;disks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;image_uuid&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;02dbab66-a70a-11e4-819b-b3dc41b361d6&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;boot&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;virtio&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;size&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30000&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Installing ZooKeeper node&lt;/h3&gt;

&lt;p&gt;Create a ZooKeeper VM from the spec file.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vmadm create -f centos7-zookeeper.json&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Make sure you can login into your newly created VM. Now we will install the required dependencies. First, download and install JDK 7.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /tmp
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget --no-check-certificate --no-cookies --header &lt;span class=&quot;s2&quot;&gt;&amp;quot;Cookie: oraclelicense=accept-securebackup-cookie&amp;quot;&lt;/span&gt; http://download.oracle.com/otn-pub/java/jdk/7u75-b13/jdk-7u75-linux-x64.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tar -xvf jdk-7u75-linux-x64.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mv /usr/lib/jvm/java-7-oracle

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi /etc/profile
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/lib/jvm/java-7-oracle
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:/usr/lib/jvm/java-7-oracle/bin

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /etc/profile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, install ZooKeeper packages from the Cloudera repository.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi /etc/yum.repos.d/Cloudera.repo

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;cloudera-cdh4&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;cloudera-cdh4
&lt;span class=&quot;nv&quot;&gt;baseurl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://archive.cloudera.com/cdh4/redhat/6/x86_64/cdh/4/
&lt;span class=&quot;nv&quot;&gt;gpgkey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; http://archive.cloudera.com/cdh4/redhat/6/x86_64/cdh/RPM-GPG-KEY-cloudera
&lt;span class=&quot;nv&quot;&gt;gpgcheck&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum install zookeeper zookeeper-server&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the installation went successful we are ready to configure ZooKeeper. It is important to enable the regular purging of old data and transaction logs, otherwise ZooKeeper will eat all of your disk space. Edit the configuration file.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi /etc/zookeeper/conf/zoo.cfg

autopurge.purgeInterval&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;12
autopurge.snapRetainCount&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Update the &lt;code&gt;/etc/hosts&lt;/code&gt; file to include ZooKeeper’s hostname.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi /etc/hosts
192.168.1.11 zookeeper0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally we can start the ZooKeeper and verify it’s working as expected. Run these commands.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;/usr/lib/zookeeper/bin/zkServer.sh start
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;ruok &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; nc zookeeper0 2181
imok&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It is of crucial importance to run ZooKeeper under supervision, since ZooKeeper will terminate if it encounters any error. To achieve it you can use a number of process monitoring tools like &lt;a href=&quot;http://mmonit.com/monit/&quot; target=&quot;_blank&quot;&gt;monit&lt;/a&gt;, &lt;a href=&quot;http://supervisord.org/&quot; target=&quot;_blank&quot;&gt;supervisord&lt;/a&gt;, or &lt;a href=&quot;http://godrb.com/&quot; target=&quot;_blank&quot;&gt;god&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Deploying Nimbus node&lt;/h3&gt;

&lt;p&gt;First, provision a new virtual machine for the Nimbus node.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vmadm create -f centos7-nimbus.json&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The following steps apply for both, the Nimbus and the Supervisor nodes, so once we had the required dependencies installed, we will create the snapshot that later on can be used to provision the Supervisor nodes. Note that here is also important to run Nimbus and Supervisor daemons under supervision.&lt;/p&gt;

&lt;h4&gt;Download and install JDK 7&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /tmp
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget --no-check-certificate --no-cookies --header &lt;span class=&quot;s2&quot;&gt;&amp;quot;Cookie: oraclelicense=accept-securebackup-cookie&amp;quot;&lt;/span&gt; http://download.oracle.com/otn-pub/java/jdk/7u75-b13/jdk-7u75-linux-x64.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tar -xvf jdk-7u75-linux-x64.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mv /usr/lib/jvm/java-7-oracle

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi /etc/profile
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/lib/jvm/java-7-oracle
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;:/usr/lib/jvm/java-7-oracle/bin

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; /etc/profile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Install ZeroMQ&lt;/h4&gt;

&lt;p&gt; Add the following repository to install the ZeroMQ package. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi /etc/yum.repos.d/ZeroMQ.repo

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;home_fengshuo_zeromq&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;The latest stable of zeromq builds &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;CentOS_CentOS-6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;rpm-md
&lt;span class=&quot;nv&quot;&gt;baseurl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://download.opensuse.org/repositories/home:/fengshuo:/zeromq/CentOS_CentOS-6/
&lt;span class=&quot;nv&quot;&gt;gpgcheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;span class=&quot;nv&quot;&gt;gpgkey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://download.opensuse.org/repositories/home:/fengshuo:/zeromq/CentOS_CentOS-6/repodata/repomd.xml.key
&lt;span class=&quot;nv&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum install zeromq zeromq-devel&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4&gt;Install JZMQ&lt;/h4&gt;

&lt;p&gt;JZMQ are the Java bindings for the ZeroMQ messaging framework. As we are going to compile and build JZMQ from sources, some dependencies are needed. Install them first.

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;yum install libtool gcc autoconf automake gcc-c++&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now we can download and install JZMQ.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /tmp
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget https://github.com/zeromq/jzmq/archive/master.zip
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;jzmq-master

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./autogen.sh
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./configure
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;make install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Create Storm system user and group&lt;/h4&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;groupadd -g &lt;span class=&quot;m&quot;&gt;53001&lt;/span&gt; storm
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkdir /var/lib/storm
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;useradd -u &lt;span class=&quot;m&quot;&gt;53001&lt;/span&gt; -g &lt;span class=&quot;m&quot;&gt;53001&lt;/span&gt; -d /var/lib/storm/ -s /bin/bash storm -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;Storm user&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;chown -R storm:storm /var/lib/storm/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;chmod &lt;span class=&quot;m&quot;&gt;750&lt;/span&gt; /var/lib/storm&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Download and install Apache Storm&lt;/h4&gt;

&lt;p&gt;Download the latest version of Storm - &lt;strong&gt;0.9.3&lt;/strong&gt; at the time of writing. Decompress the tarball and move it to the &lt;code&gt;/usr/local&lt;/code&gt; directory.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget http://ftp.cixug.es/apache/storm/apache-storm-0.9.3/apache-storm-0.9.3.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tar -xvf apache-storm-0.9.3.tar.gz
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mv apache-storm-0.9.3 /usr/local/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mv apache-storm-0.9.3 storm
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;chown -R storm:storm /usr/local/storm/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Configure Storm&lt;/h4&gt;

&lt;p&gt;Add ZooKeeper and Nimbus nodes to the &lt;code&gt;hosts&lt;/code&gt; file.&lt;/p&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi /etc/hosts
192.168.1.11 zookeeper0
192.168.1.12 nimbus/0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now edit the Storm configuration file. You need to add the ZooKeeper server/s, the Nimbus node, and change the path where Storm will store a small amount of state data.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi /usr/local/storm/conf/storm.yaml

storm.zookeeper.servers:
      - &lt;span class=&quot;s2&quot;&gt;&amp;quot;zookeeper0&amp;quot;&lt;/span&gt;

nimbus.host: &lt;span class=&quot;s2&quot;&gt;&amp;quot;nimbus/0&amp;quot;&lt;/span&gt;

nimbus.childopts: &lt;span class=&quot;s2&quot;&gt;&amp;quot;-Xmx1024m -Djava.net.preferIPv4Stack=true&amp;quot;&lt;/span&gt;
ui.childopts: &lt;span class=&quot;s2&quot;&gt;&amp;quot;-Xmx768m -Djava.net.preferIPv4Stack=true&amp;quot;&lt;/span&gt;
supervisor.childopts: &lt;span class=&quot;s2&quot;&gt;&amp;quot;-Djava.net.preferIPv4Stack=true&amp;quot;&lt;/span&gt;
worker.childopts: &lt;span class=&quot;s2&quot;&gt;&amp;quot;-Xmx768m -Djava.net.preferIPv4Stack=true&amp;quot;&lt;/span&gt;

storm.local.dir: &lt;span class=&quot;s2&quot;&gt;&amp;quot;/var/lib/storm&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Build the snapshot&lt;/h4&gt;

&lt;p&gt;Before we proceed with snapshotting, halt the Nimbus virtual machine.&lt;/p&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vmadm stop ab09289c-c05a-4c41-92ec-025b367bc860&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now make the snapshot of disk0 &lt;i&gt;zvol&lt;/i&gt; which pertains to Nimbus dataset. Dump and compress the dataset.&lt;/p&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;zfs snapshot zones/ab09289c-c05a-4c41-92ec-025b367bc860-disk0@image
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;zfs send zones/ab09289c-c05a-4c41-92ec-025b367bc860-disk0@image &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; gzip &amp;gt; supervisor.zvol.gz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To import the dataset that can be used as the template for the Supervisor node provisioning it is necessary to build the image manifest. Generate a random UUID and get the SHA1 hash of the supervisor dataset by running these commands.&lt;/p&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;uuid
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;digest -v -a sha1 supervisor.zvol.gz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We will also need the size of the dataset expressed in bytes.&lt;/p&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls -ltr &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep supervisor.zvol.gz &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; awk &lt;span class=&quot;s1&quot;&gt;&amp;#39;{print $5}&amp;#39;&lt;/span&gt;
859618398&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With that information in hand we can create an image manifest file and import the dataset.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vi /var/manifests/supervisor.dsmanifest&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;uuid&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1d94a2ec-cfe0-11e4-a9be-9b1c2d718bba&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;centos7-supervisor&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Base template to provision Storm supervisor nodes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;v&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;quot;os&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;linux&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;zvol&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;platform_type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;smartos&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;quot;created_at&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;2015-03-21T09:09Z&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;updated_at&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;2015-03-21T09:09Z&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;published_at&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;2015-03-21T09:09Z&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;files&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;path&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/var/supervisor.zvol.gz&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;sha1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;12b6ae88372eab0697f0bba3038a4c9fc0a94a7f&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;size&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;859618398&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;quot;compression&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;gzip&amp;quot;&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;disk_driver&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;virtio&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;image_size&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;10240&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;imgadm install -m /var/manifests/supervisor.dsmanifest -f /var/supervisor.zvol.gz
Installing image 1d94a2ec-cfe0-11e4-a9be-9b1c2d718bba &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;centos7-supervisor@1.0.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[=======================================================&lt;/span&gt;&amp;gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 100% 819.80MB  31.36MB/s    26s
Installed image 1d94a2ec-cfe0-11e4-a9be-9b1c2d718bba &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;centos7-supervisor@1.0.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Provisioning Supervisor nodes&lt;/h3&gt;

&lt;p&gt;With the dataset imported we can start provisioning the Supervisor nodes using the slightly modified version of the Nimbus node specification file.&lt;/p&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;brand&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;kvm&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;resolvers&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;8.8.4.4&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;ram&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;4096&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;alias&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;supervisor/0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;vcpus&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;3&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;nics&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;nic_tag&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;admin&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;ip&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;192.168.1.14&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;netmask&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;255.255.255.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;gateway&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;192.168.1.1&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;virtio&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;primary&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;quot;disks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;image_uuid&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1d94a2ec-cfe0-11e4-a9be-9b1c2d718bba&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;boot&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;model&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;virtio&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;size&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50000&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Note that we have changed the &lt;code&gt;image_uuid&lt;/code&gt; to point to our imported dataset, and we have assigned the Supervisor node more memory, disk and one additional CPU. Now we can easily deploy and scale the worker nodes.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vmadm create -f centos7-supervisor.json&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is the output of &lt;code&gt;vmadm list&lt;/code&gt; on my SmartOS instance.&lt;/p&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;vmadm list

UUID                                  TYPE  RAM      STATE             ALIAS
05af15b2-f8ae-4918-807c-ed9a3a57d522  KVM   &lt;span class=&quot;m&quot;&gt;1024&lt;/span&gt;     running           zookeeper/0
8d8bb235-3826-46bb-88e4-f96cdc182faa  KVM   &lt;span class=&quot;m&quot;&gt;3048&lt;/span&gt;     running           nimbus/0
8b4dce58-4fdc-45f5-8439-389e7b095b45  KVM   &lt;span class=&quot;m&quot;&gt;4096&lt;/span&gt;     running           supervisor/1
ab09289c-c05a-4c41-92ec-025b367bc860  KVM   &lt;span class=&quot;m&quot;&gt;4096&lt;/span&gt;     running           supervisor/0
eb5c80fd-1174-4c40-8818-38565fc09d5a  KVM   &lt;span class=&quot;m&quot;&gt;4096&lt;/span&gt;     running           supervisor/2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Submitting the topology&lt;/h3&gt;

&lt;p&gt;I assume you&#39;ve run &lt;code&gt;/usr/local/storm/bin/storm nimbus&lt;/code&gt; and &lt;code&gt;/usr/local/storm/bin/storm supervisor&lt;/code&gt; daemons under supervision. To test the cluster, we are going to deploy a simple topology from the &lt;code&gt;storm-starter&lt;/code&gt; project. Run these commands on the Nimbus node. Start by cloning the Storm repository.&lt;/p&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /root
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone git://github.com/apache/storm.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Go to &lt;code&gt;storm/examples/storm-starter&lt;/code&gt; directory and build the topology jar using Maven.&lt;/p&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;storm/examples/storm-starter
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mvn clean install -DskipTests&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally, submit the topology to the Storm cluster.&lt;/p&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;target
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;/usr/local/storm/bin/storm jar storm-starter-0.10.0-SNAPSHOT.jar storm.starter.ExclamationTopology exclamation-topology

Running: /usr/lib/jvm/java-7-oracle/bin/java -client -Dstorm.options&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; -Dstorm.home&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/storm -Dstorm.log.dir&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/storm/logs
...
&lt;span class=&quot;m&quot;&gt;2539&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; INFO  backtype.storm.StormSubmitter - Jar not uploaded to master yet. Submitting jar...
&lt;span class=&quot;m&quot;&gt;2553&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; INFO  backtype.storm.StormSubmitter - Uploading topology jar storm-starter-0.10.0-SNAPSHOT.jar to assigned location: /var/lib/storm/nimbus/inbox/stormjar-30afcd84-fd2e-4463-8275-8ff0133eff15.jar
Start uploading file &lt;span class=&quot;s1&quot;&gt;&amp;#39;storm-starter-0.10.0-SNAPSHOT.jar&amp;#39;&lt;/span&gt; to &lt;span class=&quot;s1&quot;&gt;&amp;#39;/var/lib/storm/nimbus/inbox/stormjar-30afcd84-fd2e-4463-8275-8ff0133eff15.jar&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;152705&lt;/span&gt; bytes&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[==================================================]&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;152705&lt;/span&gt; / 152705
File &lt;span class=&quot;s1&quot;&gt;&amp;#39;storm-starter-0.10.0-SNAPSHOT.jar&amp;#39;&lt;/span&gt; uploaded to &lt;span class=&quot;s1&quot;&gt;&amp;#39;/var/lib/storm/nimbus/inbox/stormjar-30afcd84-fd2e-4463-8275-8ff0133eff15.jar&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;152705&lt;/span&gt; bytes&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;2576&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; INFO  backtype.storm.StormSubmitter - Successfully uploaded topology jar to assigned location: /var/lib/storm/nimbus/inbox/stormjar-30afcd84-fd2e-4463-8275-8ff0133eff15.jar
&lt;span class=&quot;m&quot;&gt;2576&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; INFO  backtype.storm.StormSubmitter - Submitting topology exclamation-topology in distributed mode with conf &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;topology.workers&amp;quot;&lt;/span&gt;:3,&lt;span class=&quot;s2&quot;&gt;&amp;quot;topology.debug&amp;quot;&lt;/span&gt;:true&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;2716&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;main&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; INFO  backtype.storm.StormSubmitter - Finished submitting topology: exclamation-topology&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; You can get detailed stats about the cluster infrastructure, configuration, topology execution, etc. from the Storm UI. Start the server.&lt;/p&gt;


&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/usr/local/storm/bin/storm ui&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Direct your browser to &lt;code&gt;http://numbus_node_ip:8080&lt;/code&gt;.&lt;/p&gt;

&lt;figure&gt;
  &lt;a href=&quot;/images/storm-ui.jpg&quot; class=&quot;image-popup&quot;&gt;
    &lt;img src=&quot;/images/storm-ui.jpg&quot; /&gt;
  &lt;/a&gt;
  &lt;figcaption&gt;Storm UI&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/storm/virtualization/running-a-storm-cluster-on-smartos/&quot;&gt;Running a Storm cluster on SmartOS&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on March 21, 2015.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Introduction to CQRS]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/cqrs/introduction-to-cqrs/" />
  <id>http://rabbitstack.github.io/cqrs/introduction-to-cqrs</id>
  <published>2015-02-21T19:11:46+01:00</published>
  <updated>2015-02-21T19:11:46+01:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;
In the world dominated by the IoT and the increasingly demanding users, the applications and the developers itself need to adopt a new paradigm to satisfy those needs. The user&#39;s expectations are often very high as they want the contracted IT services highly available and the new feature requirements implemented as soon as possible. Besides that,
project managers also want developers to complete the tasks in a time-constrained iterations guaranteeing the quality and good performance of the final product. Despite the increasing size and complexity of the applications, we still need to stay agile and deliver the product in established deadlines. Definitely, not a trivial task, at least not in a monolithic tightly coupled application architectures.
&lt;/p&gt;
&lt;p&gt;
It is where &lt;strong&gt;CQRS&lt;/strong&gt; comes to the rescue. CQRS stands for &lt;i&gt;Command Query Responsibility Segregation&lt;/i&gt;, a design pattern with a very simple foundation: divide the application into two parts - one that is responsible for executing actions and other one providing a thin data layer for query execution. So we have two models, the &lt;strong&gt;write&lt;/strong&gt; model and the &lt;strong&gt;read&lt;/strong&gt; model. Although at first glance may seem irrelevant, this approach opens up a plethora of possibilities. To better understand the CQRS paradigm, we will explain each of its building blocks with the help of the diagram below.
&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;/images/cqrs.jpg&quot; class=&quot;image-popup&quot;&gt;
		&lt;img src=&quot;/images/cqrs.jpg&quot; /&gt;
	&lt;/a&gt;
	&lt;figcaption&gt;CQRS building blocks&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;ul&gt;
	&lt;li&gt;
		&lt;strong&gt;Commands&lt;/strong&gt; are the objects that encapsulate both the user&#39;s intention as the information necessary to perform the operation. For example, &lt;code&gt;CreateNewUserCommand&lt;/code&gt; would hold a variety of attributes such as username, address, age, etc. Commands are sent to the command bus and later dispatched to its corresponding command handler. The state change in the system is started by executing the command.
	&lt;/li&gt;
	&lt;li&gt;
		&lt;strong&gt;Domain model&lt;/strong&gt;  represents the heart of the system. Because the CQRS is based on its predecessor &lt;strong&gt;DDD&lt;/strong&gt; (Domain Driven Design) the main design approach
		resides on the rich domain model. What does this mean? In traditional design, the domain objects often play the role of entities that just keep the system state and lack any kind of behavior, and thus is often called as &lt;i&gt;anemic&lt;/i&gt; domain model. This also tends to create ambiguity between the &lt;strong&gt;DTO&lt;/strong&gt; (Data Transfer Objects) and model objects, making the domain model end up having information that must be rendered in the view, and therefore create coupling. The dedicated service layer alters the system state. CQRS promotes a strictly behavior based domain model.
	&lt;/li&gt;
	&lt;li&gt;
		&lt;strong&gt;Repositories&lt;/strong&gt; provide access to domain objects and allow isolating the domain model from persistence mechanism. Repositories just have to be able to recover the aggregate (domain object) from its unique identifier, while any other type of query is performed against read model.
	&lt;/li&gt;
	&lt;li&gt;
		&lt;strong&gt;Events&lt;/strong&gt; are the source of any state changes in the application. As mentioned above, executing commands on aggregate, initiates the state change in the system, which in turn will produce a series of domain events. We don&#39;t need to persist domain objects but the generated domain events. With this we are able to reconstruct the domain object to its last state, just by applying the stream of events on it. This pattern is known as &lt;i&gt;event sourcing&lt;/i&gt;. Events are sent to the event bus, and dispatched to any component interested in consuming it.
	&lt;/li&gt;
	&lt;li&gt;
		&lt;strong&gt;Event store&lt;/strong&gt; provides a backing store for domain events. Those are often relational databases and NoSQL databases, but for the proof of concepts they can be implemented as file system stores.
	&lt;/li&gt;
	&lt;li&gt;
		&lt;strong&gt;Queries&lt;/strong&gt; are executed against simple read-only data layer. The information needed to be rendered in the view is reflected in the object which contains the results of the query. We can say that the object is tailored for what view needs to represent.
	&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Advantages of CQRS&lt;/h3&gt;

&lt;ul&gt;
	&lt;li&gt;
		Allows the application to be distributed across multiple physical or virtual machines (horizontal scalability).
	&lt;/li&gt;
	&lt;li&gt;
		High availability at the application level. If one component fails, the rest of the system can still works.
	&lt;/li&gt;
	&lt;li&gt;
		Audit / tracking / tracing of user actions out of the box. This type of audit is not comparable to any infrastructure log, since domain events add additional value to the business. It&#39;s easy to extract and ingest the domain events into machine-learning platforms or correlation engines, for example to predict user actions, detect anomalies, etc. By having the trace of everything that happens in the application, we have a single source of truth. It is also easier to reproduce the software failures.
	&lt;/li&gt;
	&lt;li&gt;
		Instead of binding domain objects with UI components, we have simple DTO that accurately reflect what we want to represent in the view and it can be retrieved directly from the database. Thus, we can obtain all necessary information in a single request to the data source.
	&lt;/li&gt;
	&lt;li&gt;
		CQRS help us to write an expressive domain model. It also puts the models on a &quot;diet&quot; since the models only need to have the attributes relevant for the business decision.
	&lt;/li&gt;
	&lt;li&gt;
		When the command is about to be processed, the repository will get the stream of events related to the object from the event store. The object state is reconstructed from the event stream. Thus, we get the object in its original state and there will not need to provide persistence to the domain model.
	&lt;/li&gt;
	&lt;li&gt;
		Separate data models. These remain consistent, synchronized and decoupled thanks to the domain events. For the read model you can use any technology, from JDBC, ORM systems through NoSQL solutions, since the only purpose is to populate the view with data as quickly as possible. We can have denormalized databases to optimize the reads and avoid complex queries with many unions.
	&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Disadvantages&lt;/h3&gt;

&lt;p&gt;As there is no silver bullet for every scenario, you should keep in mind these considerations:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;
		Use CQRS when the domain model is complex. A simple model is not going to benefit from this pattern.
	&lt;/li&gt;
	&lt;li&gt;
		The learning curve is relatively high and it requires the change of the point of view regarding traditional design.
	&lt;/li&gt;
	&lt;li&gt;
		Higher infrastructure requirements since we have two models (the read model and the write model).
	&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Perhaps the time has come to change the traditional approach to software development? At the end, it is up to you. The benefits of CQRS are tremendous. It keeps the software maintainable, easily extensible and ready to face new challenges that the future holds. If your next project’s requirements are going to be complex, or you just need high availability and scalability at the application level and you want to grow without losing the agility, don’t hesitate, use CQRS.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/cqrs/introduction-to-cqrs/&quot;&gt;Introduction to CQRS&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on February 21, 2015.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Deploying Cloud Foundry on OpenStack Juno and XenServer (Part II)]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/openstack/cloud%20foundry/devops/deploying-cloud-foundry-on-openstack-juno-and-xenserver-part-ii/" />
  <id>http://rabbitstack.github.io/openstack/cloud%20foundry/devops/deploying-cloud-foundry-on-openstack-juno-and-xenserver-part-ii</id>
  <published>2015-02-14T11:48:52+01:00</published>
  <updated>2015-02-14T11:48:52+01:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Let&#39;s move on. We should have our OpenStack instance prepared for Cloud Foundry. The most usual way of deploying Cloud Foundry is through &lt;strong&gt;BOSH&lt;/strong&gt;. For the who still didn&#39;t hear about it, &lt;a href=&quot;http://bosh.io/docs&quot; target=&quot;_blank&quot;&gt;BOSH&lt;/a&gt; is the platform for automation and lifecycle management of software and distributed services. It is also capable of monitoring and failure recovery of processes and virtual machines. There are already a few IT automation platforms in the market like &lt;a href=&quot;https://www.chef.io/&quot; target=&quot;_blank&quot;&gt;Chef&lt;/a&gt; or &lt;a href=&quot;http://puppetlabs.com/&quot; target=&quot;_blank&quot;&gt;Puppet&lt;/a&gt;, so, why to learn / use BOSH then?
&lt;/p&gt;
&lt;p&gt;
One notable difference is that BOSH is able to perform the deployment from the sterile environment, i.e. package source code and dependencies, create the virtual machines (jobs in BOSH terminology) from the so-called&lt;i&gt;stemcell&lt;/i&gt; template (VM which has BOSH agent installed and is used to generate the jobs), and finally install, start and monitor the required services and VMs. Visit the official page from the link above to learn more about BOSH.
&lt;/p&gt;
&lt;h3&gt;Deploying MicroBOSH&lt;/h3&gt;

&lt;p&gt;MicroBOSH is a single VM which contains all the necessary components to boot BOSH, including the blobstore, nats, director, health manager etc. Once you have an instance of MicroBOSH running, you can deploy BOSH if you wish. Install BOSH CLI gems (Ruby &amp;gt;= 1.9.3 is required).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem install bosh_cli bosh_cli_plugin_micro&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You will need to create a keypair in OpenStack and configure &lt;code&gt;bosh&lt;/code&gt; security group with the rules shown in the table below. You can do it by accessing the Horizon dashboard or by using &lt;code&gt;nova&lt;/code&gt; CLI.&lt;/p&gt;
&lt;table rules=&quot;groups&quot;&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Direction&lt;/th&gt;
          &lt;th&gt;IP Protocol&lt;/th&gt;
          &lt;th&gt;Port Range&lt;/th&gt;
          &lt;th&gt;Remote&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;&lt;td style=&quot;text-align:center&quot;&gt;Ingress&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;TCP&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;1-65535&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;bosh&lt;/td&gt;&lt;/tr&gt;
      &lt;tr&gt;&lt;td style=&quot;text-align:center&quot;&gt;Ingress&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;TCP&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;53 (DNS)&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;0.0.0.0/0 (CIDR)&lt;/td&gt;&lt;/tr&gt;
      &lt;tr&gt;&lt;td style=&quot;text-align:center&quot;&gt;Ingress&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;TCP&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;4222&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;0.0.0.0/0 (CIDR)&lt;/td&gt;&lt;/tr&gt;
      &lt;tr&gt;&lt;td style=&quot;text-align:center&quot;&gt;Ingress&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;TCP&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;6868&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;0.0.0.0/0 (CIDR)&lt;/td&gt;&lt;/tr&gt;
      &lt;tr&gt;&lt;td style=&quot;text-align:center&quot;&gt;Ingress&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;TCP&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;4222&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;0.0.0.0/0 (CIDR)&lt;/td&gt;&lt;/tr&gt;
      &lt;tr&gt;&lt;td style=&quot;text-align:center&quot;&gt;Ingress&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;TCP&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;25250&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;0.0.0.0/0 (CIDR)&lt;/td&gt;&lt;/tr&gt;
      &lt;tr&gt;&lt;td style=&quot;text-align:center&quot;&gt;Ingress&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;TCP&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;25555&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;0.0.0.0/0 (CIDR)&lt;/td&gt;&lt;/tr&gt;
      &lt;tr&gt;&lt;td style=&quot;text-align:center&quot;&gt;Ingress&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;TCP&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;25777&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;0.0.0.0/0 (CIDR)&lt;/td&gt;&lt;/tr&gt;
  &lt;/tbody&gt;
       &lt;tr&gt;&lt;td style=&quot;text-align:center&quot;&gt;Ingress&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;UDP&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;53&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;0.0.0.0/0 (CIDR)&lt;/td&gt;&lt;/tr&gt;
      &lt;tr&gt;&lt;td style=&quot;text-align:center&quot;&gt;Ingress&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;UDP&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;68&lt;/td&gt;&lt;td style=&quot;text-align:center&quot;&gt;0.0.0.0/0 (CIDR)&lt;/td&gt;&lt;/tr&gt;
  &lt;tbody&gt;

  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nova keypair-add microbosh &amp;gt; microbosh.pem
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;chmod &lt;span class=&quot;m&quot;&gt;600&lt;/span&gt; microbosh.pem&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;BOSH uses a variety of artifacts in order to complete the deployment life cycle. We can basically distinguish between stemcell, release and deployment. To deploy MicroBOSH we will only need a stemcell which can be downloaded using the bosh CLI. First get a list of available stemcells and download the &lt;code&gt;bosh-stemcell-2839-openstack-kvm-centos-go_agent-raw.tgz&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bosh public stemcells
+-----------------------------------------------------------------+
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Name                                                            &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
+-----------------------------------------------------------------+
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2427-aws-xen-ubuntu.tgz                           &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2652-aws-xen-centos.tgz                           &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2839-aws-xen-centos-go_agent.tgz                  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2427-aws-xen-ubuntu-go_agent.tgz                  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2710-aws-xen-ubuntu-lucid-go_agent.tgz            &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2652-aws-xen-ubuntu-lucid.tgz                     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2839-aws-xen-ubuntu-trusty-go_agent.tgz           &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2690.6-aws-xen-ubuntu-trusty-go_agent.tgz         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2719.1-aws-xen-centos-go_agent.tgz                &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2719.1-aws-xen-ubuntu-trusty-go_agent.tgz         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2719.2-aws-xen-centos-go_agent.tgz                &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2719.2-aws-xen-ubuntu-trusty-go_agent.tgz         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2719.3-aws-xen-ubuntu-trusty-go_agent.tgz         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; light-bosh-stemcell-2427-aws-xen-ubuntu.tgz                     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; light-bosh-stemcell-2652-aws-xen-centos.tgz                     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; light-bosh-stemcell-2839-aws-xen-centos-go_agent.tgz            &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; light-bosh-stemcell-2427-aws-xen-ubuntu-go_agent.tgz            &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; light-bosh-stemcell-2710-aws-xen-ubuntu-lucid-go_agent.tgz      &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; light-bosh-stemcell-2652-aws-xen-ubuntu-lucid.tgz               &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; light-bosh-stemcell-2839-aws-xen-ubuntu-trusty-go_agent.tgz     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; light-bosh-stemcell-2690.6-aws-xen-ubuntu-trusty-go_agent.tgz   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; light-bosh-stemcell-2719.1-aws-xen-centos-go_agent.tgz          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; light-bosh-stemcell-2719.1-aws-xen-ubuntu-trusty-go_agent.tgz   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; light-bosh-stemcell-2719.2-aws-xen-centos-go_agent.tgz          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; light-bosh-stemcell-2719.2-aws-xen-ubuntu-trusty-go_agent.tgz   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; light-bosh-stemcell-2719.3-aws-xen-ubuntu-trusty-go_agent.tgz   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; light-bosh-stemcell-2839-aws-xen-hvm-centos-go_agent.tgz        &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; light-bosh-stemcell-2839-aws-xen-hvm-ubuntu-trusty-go_agent.tgz &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2427-openstack-kvm-ubuntu.tgz                     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2624-openstack-kvm-centos.tgz                     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2624-openstack-kvm-ubuntu-lucid.tgz               &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2839-openstack-kvm-centos-go_agent.tgz            &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2839-openstack-kvm-ubuntu-trusty-go_agent.tgz     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2652-openstack-kvm-ubuntu-lucid-go_agent.tgz      &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2719.1-openstack-kvm-centos-go_agent.tgz          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2719.1-openstack-kvm-ubuntu-trusty-go_agent.tgz   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2719.2-openstack-kvm-centos-go_agent.tgz          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2719.2-openstack-kvm-ubuntu-trusty-go_agent.tgz   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2719.3-openstack-kvm-ubuntu-trusty-go_agent.tgz   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2839-openstack-kvm-centos-go_agent-raw.tgz        &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2839-openstack-kvm-ubuntu-trusty-go_agent-raw.tgz &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2427-vcloud-esxi-ubuntu.tgz                       &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2652-vcloud-esxi-ubuntu-lucid.tgz                 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2839-vcloud-esxi-ubuntu-trusty-go_agent.tgz       &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2690.5-vcloud-esxi-ubuntu-trusty-go_agent.tgz     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2690.6-vcloud-esxi-ubuntu-trusty-go_agent.tgz     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2710-vcloud-esxi-ubuntu-lucid-go_agent.tgz        &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2427-vsphere-esxi-ubuntu.tgz                      &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2624-vsphere-esxi-centos.tgz                      &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2839-vsphere-esxi-centos-go_agent.tgz             &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2427-vsphere-esxi-ubuntu-go_agent.tgz             &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2710-vsphere-esxi-ubuntu-lucid-go_agent.tgz       &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2624-vsphere-esxi-ubuntu-lucid.tgz                &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2839-vsphere-esxi-ubuntu-trusty-go_agent.tgz      &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2719.1-vsphere-esxi-centos-go_agent.tgz           &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2719.1-vsphere-esxi-ubuntu-trusty-go_agent.tgz    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2719.2-vsphere-esxi-ubuntu-trusty-go_agent.tgz    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2719.2-vsphere-esxi-centos-go_agent.tgz           &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2719.3-vsphere-esxi-ubuntu-trusty-go_agent.tgz    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-2690.6-vsphere-esxi-ubuntu-trusty-go_agent.tgz    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-389-warden-boshlite-ubuntu-trusty-go_agent.tgz    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-53-warden-boshlite-ubuntu.tgz                     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-389-warden-boshlite-centos-go_agent.tgz           &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bosh-stemcell-64-warden-boshlite-ubuntu-lucid-go_agent.tgz      &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
+-----------------------------------------------------------------+&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bosh download public stemcell bosh-stemcell-2839-openstack-kvm-centos-go_agent-raw.tgz
bosh-stemcell:   4% &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;ooo                              &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  24.4MB 753.0KB/s ETA:  00:11:43&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we are ready to create the MicroBOSH deployment manifest &lt;code&gt;microbosh-openstack.yml&lt;/code&gt; file. You will need to change &lt;code&gt;net_id&lt;/code&gt; with your OpenStack instance network  identifier, &lt;code&gt;ip&lt;/code&gt; with the ip address from the network pool. You can find out that information by executing the following commands.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nova network-list
+--------------------------------------+----------+----------------+
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; ID                                   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Label    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Cidr           &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
+--------------------------------------+----------+----------------+
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 3f36d40e-1097-49a0-a023-4606dbf3a1f5 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; yuna-net &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 192.168.1.0/24 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
+--------------------------------------+----------+----------------+

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nova network-show 3f36d40e-1097-49a0-a023-4606dbf3a1f5
+---------------------+--------------------------------------+
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Property            &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Value                                &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
+---------------------+--------------------------------------+
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bridge              &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; xenbr0                               &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; bridge_interface    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; eth0                                 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; broadcast           &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 192.168.1.255                        &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; cidr                &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 192.168.1.0/24                       &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; cidr_v6             &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; -                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; created_at          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 2014-12-28T17:18:14.000000           &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; deleted             &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; False                                &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; deleted_at          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; -                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; dhcp_server         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 192.168.1.50                         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; dhcp_start          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 192.168.1.51                         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; dns1                &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 8.8.4.4                              &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; dns2                &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; -                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; enable_dhcp         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; True                                 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; gateway             &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 192.168.1.50                         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; gateway_v6          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; -                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; host                &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; -                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; id                  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 3f36d40e-1097-49a0-a023-4606dbf3a1f5 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; injected            &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; False                                &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; label               &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; yuna-net                             &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; mtu                 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; -                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; multi_host          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; True                                 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; netmask             &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 255.255.255.0                        &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; netmask_v6          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; -                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; priority            &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; -                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; project_id          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; -                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; rxtx_base           &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; -                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; share_address       &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; True                                 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; updated_at          &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; -                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; vlan                &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; -                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; vpn_private_address &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; -                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; vpn_public_address  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; -                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; vpn_public_port     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; -                                    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
+---------------------+--------------------------------------+&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Under the &lt;code&gt;openstack&lt;/code&gt; section change the Identity service endpoint, OpenStack credentials, the private key location, and optionally set the timeout for OpenStack resources.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;microbosh-openstack&lt;/span&gt;

&lt;span class=&quot;l-Scalar-Plain&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;DEBUG&lt;/span&gt;

&lt;span class=&quot;l-Scalar-Plain&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;manual&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;ip&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;192.168.1.55&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;cloud_properties&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;net_id&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;3f36d40e-1097-49a0-a023-4606dbf3a1f5&lt;/span&gt;

&lt;span class=&quot;l-Scalar-Plain&quot;&gt;resources&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;persistent_disk&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;16384&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;cloud_properties&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;instance_type&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;m1.medium&lt;/span&gt;

&lt;span class=&quot;l-Scalar-Plain&quot;&gt;cloud&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;plugin&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;openstack&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;openstack&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;auth_url&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;http://controller:5000/v2.0&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;admin&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;api_key&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;admin&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;tenant&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;admin&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;default_security_groups&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p-Indicator&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;bosh&amp;quot;&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;default_key_name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;microbosh&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;private_key&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;/root/microbosh.pem&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;state_timeout&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;900&lt;/span&gt;

&lt;span class=&quot;l-Scalar-Plain&quot;&gt;apply_spec&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;director&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;max_threads&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;3&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;hm&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;l-Scalar-Plain&quot;&gt;resurrector_enabled&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;l-Scalar-Plain&quot;&gt;ntp&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;0.europe.pool.ntp.org&lt;/span&gt;
      &lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;1.europe.pool.ntp.org&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, set the current deployment manifest file and deploy MicroBOSH.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bosh micro deployment microbosh-openstack.yml
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bosh micro deploy bosh-stemcell-2839-openstack-kvm-centos-go_agent-raw.tgz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If everything goes well you should login into the MicroBOSH instance (use &lt;code&gt;admin&lt;/code&gt;, for both username and password).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;l-Scalar-Plain&quot;&gt;$ bosh target 192.168.1.55&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;Target set to &amp;#39;microbosh-openstack&amp;#39;&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;Your username&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;admin&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;Enter password&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;*****&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;Logged in as &amp;#39;admin&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Deploying Cloud Foundry&lt;/h3&gt;

&lt;p&gt;Start by cloning the Cloud Foundry repository. Enter the newly created &lt;code&gt;cf-release&lt;/code&gt; directory and execute the &lt;code&gt;update&lt;/code&gt; script to update all submodules.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/cloudfoundry/cf-release.git
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;cf-release
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Upload the stemcell to the BOSH Director.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bosh upload stemcell bosh-stemcell-2839-openstack-kvm-centos-go_agent-raw.tgz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In BOSH terminology, &lt;strong&gt;release&lt;/strong&gt; is a collection of packages and source code, dependencies, configuration properties, and any other components required to perform a deployment. To create a Cloud Foundry release, use this command from &lt;code&gt;cf-release&lt;/code&gt; directory.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bosh create release&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will download the required blobs from the S3 storage service and generate a release tarball. You should end up with the similar directory structures.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls blobs
buildpack_cache    git           haproxy         mysql             php-buildpack     rootfs      ruby-buildpack
cli                go-buildpack  java-buildpack  nginx             postgres          ruby        sqlite
debian_nfs_server  golang        libyaml         nodejs-buildpack  python-buildpack  ruby-2.1.4  uaa

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ls packages
acceptance-tests        buildpack_python     dea_next             golang     loggregator_trafficcontroller  postgres        warden
buildpack_cache         buildpack_ruby       debian_nfs_server    golang1.3  login                          rootfs_lucid64
buildpack_go            cli                  doppler              gorouter   metron_agent                   ruby
buildpack_java          cloud_controller_ng  etcd                 haproxy    mysqlclient                    ruby-2.1.4
buildpack_java_offline  collector            etcd_metrics_server  hm9000     nats                           smoke-tests
buildpack_nodejs        common               git                  libpq      nginx                          sqlite
buildpack_php           dea_logging_agent    gnatsd               libyaml    nginx_newrelic_plugin          uaa&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now you can upload the release to the BOSH Director.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bosh upload release&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The most complex part of Cloud Foundry BOSH deployment is the manifest file where all components are tied together - computing resource specifications, VMs, software releases, and configuration properties. You can use the deployment which worked great on my environment. Don’t forget to create &lt;code&gt;cf.small&lt;/code&gt; and &lt;code&gt;cf.medium&lt;/code&gt; flavors in OpenStack.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/bhnedo/3026f62119705d239863.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Set and initiate the deploy. This process can take a few hours. Relax.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bosh deployment cf-deployment.yml
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;bosh deploy&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Pushing an application&lt;/h3&gt;

&lt;p&gt;Download the &lt;code&gt;cf&lt;/code&gt; CLI from &lt;a href=&quot;https://github.com/cloudfoundry/cli/releases&quot; target=&quot;_blank&quot;&gt;https://github.com/cloudfoundry/cli/releases&lt;/a&gt;.

Make sure you can access the API endpoint of the Cloud Foundry instance. If so, use &lt;code&gt;cf login&lt;/code&gt; with your username, organization and space.
&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl http://api.192.168.1.249.xip.io/info
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cf login -a api.192.168.1.249.xip.io -u user -o rabbitstack -s qa&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To test our instance we are going to push a very simple &lt;code&gt;node.js&lt;/code&gt; app. Create a new directory and place &lt;code&gt;server.js&lt;/code&gt; and the application &lt;code&gt;manifest.yml&lt;/code&gt; file in it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createServer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writeHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;text/html&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Bunnies on Cloud Foundry. Port is &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;VCAP_APP_PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;VCAP_APP_PORT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;l-Scalar-Plain&quot;&gt;applications&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p-Indicator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;rabbitstack&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;memory&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;256M&lt;/span&gt;
  &lt;span class=&quot;l-Scalar-Plain&quot;&gt;instances&lt;/span&gt;&lt;span class=&quot;p-Indicator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;l-Scalar-Plain&quot;&gt;1&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;From within the directory run &lt;code&gt;cf push&lt;/code&gt; and access &lt;code&gt;http://rabbitstack.192.168.1.249.xip.io&lt;/code&gt; from the browser. Play with &lt;code&gt;cf scale&lt;/code&gt; and see how port number changes on every request.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;
Congratulations! You now have a fully functional private Cloud Foundry.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/openstack/cloud%20foundry/devops/deploying-cloud-foundry-on-openstack-juno-and-xenserver-part-ii/&quot;&gt;Deploying Cloud Foundry on OpenStack Juno and XenServer (Part II)&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on February 14, 2015.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Deploying Cloud Foundry on OpenStack Juno and XenServer (Part I)]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/openstack/virtualization/deploying-cloud-foundry-on-openstack-juno-and-xenserver-part-i/" />
  <id>http://rabbitstack.github.io/openstack/virtualization/deploying-cloud-foundry-on-openstack-juno-and-xenserver-part-i</id>
  <published>2015-01-30T17:03:28+01:00</published>
  <updated>2015-01-30T17:03:28+01:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;
&lt;a href=&quot;http://www.cloudfoundry.org/index.html&quot; target=&quot;_blank&quot;&gt;Cloud Foundry&lt;/a&gt; ecosystem had been blowing my mind for a long time, and I think it really has made an IT disruption letting us focus on applications as the essential unit of business process. There is no need for us to worry about all those painful stuffs like scalability, multi tenancy and application health. Cloud Foundry will do that nasty job for us, and much more. It could be considered as an operating system for the cloud.
&lt;/p&gt;

&lt;p&gt;
While I was investigating about Cloud Foundry, I also figured out its agnostic nature which enable it to be easily deployed on AWS, vSphere or &lt;a href=&quot;https://www.openstack.org/&quot; target=&quot;_blank&quot;&gt;OpenStack&lt;/a&gt;. That is how I got motivated to acquire one of those cheap Dell rack servers on eBay and start the experiment. I had opted for XenServer 6.2 as the hypervisor. Unfortunately, the documentation about setting up the OpenStack compute node on XenServer is rather incomplete, deprecated and very hard to follow if you
are doing it for the first time. So, let&#39;s see how to proceed step by step, and prepare our OpenStack environment for Cloud Foundry instance deployment. I already assume you have successfully installed and configured the controller node.
&lt;/p&gt;

&lt;h3&gt;Installing paravirtualized XenServer domain&lt;/h3&gt;

&lt;p&gt; OpenStack compute node needs a paravirtualized virtual machine running on each XenServer instance. Paravirtualized VM basically has a recompiled kernel so it can talk directly to the hypervisor API. If Centos is your distribution of choice then the easiest way to set up a PV virtual machine is by using this &lt;a href=&quot;https://gist.githubusercontent.com/bhnedo/4648499f5680207e86ec/raw/4239fd8d0e10f7f2759d600b28b52f1744d9b5ad/kickstart-centos-minimal.cfg&quot; target=&quot;_blank&quot;&gt;kickstart&lt;/a&gt; file.&lt;/p&gt;
&lt;p&gt;Let’s first create the VM. Please note we have to use Red Hat 6 template, even if we are going to install Centos 7 distribution. For XenServer 6.5 this is not necessary.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;TEMPLATE_UUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;xe template-list &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; grep -B1 &lt;span class=&quot;s1&quot;&gt;&amp;#39;name-label.*Red Hat.* 6.*64-bit&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; awk -F: &lt;span class=&quot;s1&quot;&gt;&amp;#39;/uuid/{print $2}&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; tr -d &lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;VMUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;xe vm-install new-name-label&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;compute&amp;quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TEMPLATE_UUID&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;})&lt;/span&gt;
xe vm-param-set &lt;span class=&quot;nv&quot;&gt;uuid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VMUUID&lt;/span&gt; other-config:install-repository&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://mirror.centos.org/centos/7/os/x86_64
xe vm-param-set &lt;span class=&quot;nv&quot;&gt;uuid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VMUUID&lt;/span&gt; PV-args&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ks=https://gist.githubusercontent.com/bhnedo/4648499f5680207e86ec/raw/4239fd8d0e10f7f2759d600b28b52f1744d9b5ad/kickstart-centos-minimal.cfg ksdevice=eth0&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Find out the network UUID for the bridge that has access to the Internet. Note that Xen bridge is created for every physical network adapter on your machine. Get a list of XenServer networks and store the UUID for the appropriate bridge (in most cases it will be &lt;code&gt;xenbr0&lt;/code&gt;).&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;xe network-list
&lt;span class=&quot;nv&quot;&gt;NETUUID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;xe network-list &lt;span class=&quot;nv&quot;&gt;bridge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xenbr0 --minimal&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Create a virtual network interface (VIF) and attach it to the virtual machine and network. Start the VM and watch the installation progress from XenCenter.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;xe vif-create vm-uuid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VMUUID&lt;/span&gt; network-uuid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$NETUUID&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;mac&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;random &lt;span class=&quot;nv&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
xe vm-start &lt;span class=&quot;nv&quot;&gt;uuid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VMUUID&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When installation process is done export the VM so we have the base image to use for the storage node too.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;xe vm-export &lt;span class=&quot;nv&quot;&gt;uuid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VMUUID&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;openstack-juno-centos7.xva&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;notice&quot;&gt;
&lt;strong&gt;Notice:&lt;/strong&gt; &lt;code&gt;PyGrub&lt;/code&gt; doesn&#39;t support &lt;code&gt;grub2&lt;/code&gt; boot loader. You will need to apply the following &lt;a href=&quot;https://github.com/xenserver/xen-4.3.pg/blob/bf5f09b1a8b5ad4086285ce926a2c2dae68771a1/pygrub-fix-for-rhel7.patch&quot; target=&quot;_blank&quot;&gt;patch&lt;/a&gt; in order to boot the VM properly. This issue has been corrected in XenServer 6.5 release.
&lt;/p&gt;

&lt;h3&gt;Installing and configuring compute service&lt;/h3&gt;

&lt;p&gt;
Once you have a running PV guest the next step is to install OpenStack plugins for XenServer Dom0. These will let the compute node to communicate with Xen XAPI in order to provision virtual machines, set up networking, storage, etc. Download the latest Openstack Juno branch, unzip and copy the content of &lt;code&gt;plugins/xenserver/xenapi/etc/xapi.d/plugins&lt;/code&gt; directory to&lt;code&gt;/etc/xapi.d/plugins&lt;/code&gt;. Also ensure that added files are executable.

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /tmp
wget https://github.com/openstack/nova/archive/master.zip
unzip master.zip
cp /tmp/nova-juno-stable/plugins/xenserver/xenapi/etc/xapi.d/plugins/* /etc/xapi.d/plugins
chmod a+x /etc/xapi.d/plugins/*&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


Log into your newly installed compute node (default password for the &lt;strong&gt;root&lt;/strong&gt; user is &lt;i&gt;changeit&lt;/i&gt;) and run these commands to enable OpenStack Juno repository and upgrade the packages on your host.
&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yum install http://rdo.fedorapeople.org/openstack-juno/rdo-release-juno.rpm
yum upgrade&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If your kernel is upgraded you will probably need to reboot the machine after upgrade process in order to activate the new kernel. Now install the required packages for the compute hypervisor components and &lt;i&gt;nova-network&lt;/i&gt; legacy networking.
&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yum install openstack-nova-compute sysfsutils
yum install openstack-nova-network openstack-nova-api&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt; Xenapi python package is also required, so install it using &lt;code&gt;pip&lt;/code&gt; package manager.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;easy_install pip
pip install xenapi&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;blockquote&gt;
I didn&#39;t wanted to setup another network node for &lt;strong&gt;Neutron&lt;/strong&gt;, even legacy networking is deprecated in favor of after-mentioned component. If you need advanced features like VLANs, virtual routing, switching, tenant isolation and so on, follow these &lt;a href=&quot;http://docs.openstack.org/juno/install-guide/install/yum/content/section_neutron-networking.html&quot; target=&quot;_blank&quot;&gt;docs&lt;/a&gt; on how to add Neutron network.
&lt;/blockquote&gt;
&lt;p&gt;
Now we need to edit the &lt;code&gt;/etc/nova/nova.conf&lt;/code&gt; configuration file.
&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;
		&lt;strong&gt;Message broker settings&lt;/strong&gt;
		&lt;p&gt;Configure RabbitMQ messaging system in the &lt;code&gt;[DEFAULT]&lt;/code&gt; section:&lt;/p&gt;
			&lt;pre&gt;
 [DEFAULT]
 rpc_backend = rabbit
 rabbit_host = controller
 rabbit_userid = RABBIT_USER
 rabbit_password = RABBIT_PASSWORD
 			&lt;/pre&gt;

	&lt;/li&gt;
	&lt;li&gt;
		&lt;strong&gt;Keystone authentication&lt;/strong&gt;
		&lt;p&gt;Modify &lt;code&gt;[DEFAULT]&lt;/code&gt; and &lt;code&gt;[keystone_authtoken]&lt;/code&gt; sections to configure authentication service access:&lt;/p&gt;
			&lt;pre&gt;
 [DEFAULT]
 auth_strategy = keystone

 [keystone_authtoken]
 auth_uri = http://controller:5000/v2.0
 identity_uri = http://controller:35357
 admin_tenant_name = service
 admin_user = nova
 admin_password = NOVA_PASSWORD
		  &lt;/pre&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;strong&gt;Network configuration&lt;/strong&gt;
		&lt;p&gt;Before proceeding with network parameters, you will need to create a second VIF and attach it to the compute VM. &lt;/p&gt;
		&lt;pre&gt;
 $ xe vif-create vm-uuid=$VMUUID network-uuid=$NETUUID mac=random device=1
 $ xe vm-start uuid=$VMUUID
		&lt;/pre&gt;
		&lt;p&gt; This network interface will be connected to the Linux bridge and at same time will act as default gateway for all VM instances spawned inside OpenStack. The traffic forwarding between tenants is done at L2 level through  this bridge. You should end up with the following interfaces and &lt;code&gt;xenbr0&lt;/code&gt; up after creating the network in OpenStack.
		&lt;/p&gt;
		&lt;pre&gt;
 $ ifconfig
 eth0: flags=4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt;  mtu 1500
        inet 192.168.1.106  netmask 255.255.255.0  broadcast 192.168.1.255
        inet6 fe80::90b3:8fff:fe2c:1d09  prefixlen 64  scopeid 0x20&lt;link /&gt;
        ether 92:b3:8f:2c:1d:09  txqueuelen 1000  (Ethernet)
        RX packets 3016  bytes 1189159 (1.1 MiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 2812  bytes 636656 (621.7 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

 eth1: flags=4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt;  mtu 1500
        inet6 fe80::44ab:daff:fe21:46d4  prefixlen 64  scopeid 0x20&lt;link /&gt;
        ether 46:ab:da:21:46:d4  txqueuelen 1000  (Ethernet)
        RX packets 611  bytes 111213 (108.6 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 38  bytes 4943 (4.8 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

 xenbr0: flags=4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt;  mtu 1500
        inet 192.168.1.50  netmask 255.255.255.0  broadcast 192.168.1.255
        inet6 fe80::4034:39ff:fecd:b9b3  prefixlen 64  scopeid 0x20&lt;link /&gt;
        ether 46:ab:da:21:46:d4  txqueuelen 0  (Ethernet)
        RX packets 89  bytes 11222 (10.9 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 28  bytes 3967 (3.8 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

 $ brctl show
 bridge name     bridge id               STP enabled                  interfaces
 xenbr0          8000.46abda2146d4          no                         eth1
		&lt;/pre&gt;
		 &lt;p&gt;In the&lt;code&gt;[DEFAULT]&lt;/code&gt; section you will need to put these properties:&lt;/p&gt;
			&lt;pre&gt;
 [DEFAULT]
 network_api_class = nova.network.api.API
 security_group_api = nova
 network_manager = nova.network.manager.FlatDHCPManager
 allow_same_net_traffic = True
 multi_host = True
 send_arp_for_ha = True
 share_dhcp_address = True
 force_dhcp_release = True
 flat_network_bridge = xenbr0
 flat_interface = eth1
 public_interface = eth0

 my_ip = MANAGEMENT_INTERFACE_IP
 firewall_driver = nova.virt.xenapi.firewall.Dom0IptablesFirewallDriver
			&lt;/pre&gt;

	&lt;/li&gt;
	&lt;li&gt;
		&lt;strong&gt;Hypervisor settings&lt;/strong&gt;
		&lt;p&gt;Enable Xen compute driver in the &lt;code&gt;[DEFAULT]&lt;/code&gt; section, XAPI endpoint and credentials in the &lt;code&gt;[xenserver]&lt;/code&gt; section:&lt;/p&gt;
		&lt;pre&gt;
 [DEFAULT]
 compute_driver = xenapi.XenAPIDriver

 [xenserver]
 connection_url = http://XENSERVER_MANAGEMENT_IP
 connection_username = XENSERVER_USERNAME
 connection_password = XENSERVER_PASSWORD
 		&lt;/pre&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;strong&gt;Image service and VNC access&lt;/strong&gt;
		&lt;p&gt;We are almost done. In the &lt;code&gt;[glance]&lt;/code&gt; section configure the location of the Image Service. In the &lt;code&gt;[DEFAULT]&lt;/code&gt; section enable remote console access. When deploying OpenStack services for the first time, it&#39;s a good idea to enable verbose logging too.&lt;/p&gt;
				&lt;pre&gt;
 [glance]
 host = controller

 [DEFAULT]
 vnc_enabled = True
 vncserver_listen = 0.0.0.0
 vncserver_proxyclient_address = MANAGEMENT_INTERFACE_IP
 novncproxy_base_url = http://controller:6080/vnc_auto.html

 verbose = true
 		&lt;/pre&gt;
	&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Start the Compute and Network services and configure them to be automatically started at boot time.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;openstack-nova-compute.service openstack-nova-network.service openstack-nova-metadata-api.service
systemctl start openstack-nova-compute.service openstack-nova-network.service openstack-nova-metadata-api.service&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Make sure the &lt;code&gt;nova-compute&lt;/code&gt; and &lt;code&gt;nova-network&lt;/code&gt; are up and running by executing this command on the controller node:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;nova service-list
+----+------------------+---------+----------+---------+-------+----------------------------+
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Id &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Binary           &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Host    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Zone     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Status  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; State &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Updated_at                 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
+----+------------------+---------+----------+---------+-------+----------------------------+
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; nova-consoleauth &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; hydra   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; internal &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; enabled &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; up    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 2015-01-31T17:57:06.000000 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; nova-cert        &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; hydra   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; internal &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; enabled &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; up    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 2015-01-31T17:57:06.000000 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; nova-scheduler   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; hydra   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; internal &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; enabled &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; up    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 2015-01-31T17:57:06.000000 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; nova-conductor   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; hydra   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; internal &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; enabled &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; up    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 2015-01-31T17:57:06.000000 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; nova-compute     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; compute &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; nova     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; enabled &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; up    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 2015-01-31T17:57:07.000000 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; nova-network     &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; compute &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; internal &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; enabled &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; up    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 2015-01-31T17:57:00.000000 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
+----+------------------+---------+----------+---------+-------+----------------------------+-&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Installing and configuring storage node&lt;/h3&gt;

&lt;p&gt;We can start by creating the storage node VM from the base template image we had exported. Run these commands in the XenServer console:

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;SRUUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;xe sr-list name-label&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Local storage&amp;quot;&lt;/span&gt; --minimal&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
xe vm-import &lt;span class=&quot;nv&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;openstack-juno-centos7.xva &lt;span class=&quot;nv&quot;&gt;force&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true &lt;/span&gt;sr-uuid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SRUUID&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;preserve&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


You will need to create and attach the VDI where &lt;i&gt;cinder&lt;/i&gt; volumes will be stored. Get the UUID of your newly imported VM, and then run
these commands.
&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;VDIUUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;xe vdi-create sr-uuid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SRUUID&lt;/span&gt; name-label&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;cinder&amp;quot;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;user virtual-size&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;250GiB&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;VBDUUID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;xe vbd-create vm-uuid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VMUUID&lt;/span&gt; vdi-uuid&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VDIUUID&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
xe vbd-plug &lt;span class=&quot;nv&quot;&gt;uuid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VBDUUID&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Install the required dependencies and start the LVM metadata service.
&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yum install lvm2
systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;lvm2-lvmetad.service
systemctl start lvm2-lvmetad.service&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Partition the disk in order to create the LVM physical volume and the volume group labeled as &lt;code&gt; cinder-volumes &lt;/code&gt;. Change &lt;code&gt;/dev/xvdb1&lt;/code&gt; with your partition.
&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;pvcreate /dev/xvdb1
vgcreate cinder-volumes /dev/xvdb1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
It is also necessary to instruct the LVM which block storage devices should be scanned. Edit the &lt;code&gt;/etc/lvm/lvm.conf&lt;/code&gt; file and modify the &lt;code&gt;filter&lt;/code&gt; section to include the created volume group.
&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;devices &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  ...
  &lt;span class=&quot;nv&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;a/xvda/&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;a/xvdb/&amp;quot;&lt;/span&gt;, &lt;span class=&quot;s2&quot;&gt;&amp;quot;r/.*/&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  ...
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
We are now ready to install and configure Block Storage components and dependencies. I wasn&#39;t able to get iSCSI LUNs to work using &lt;code&gt;targetcli&lt;/code&gt;, probably because XenServer relies on SCSI initiator utilities. The solution was to use &lt;code&gt;scsi-target-utils&lt;/code&gt; instead.
&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yum install scsi-target-utils
yum install openstack-cinder python-oslo-db MySQL-python&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Edit the &lt;code&gt;/etc/cinder/cinder.conf&lt;/code&gt; configuration file.
&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;
		&lt;strong&gt;Message broker settings&lt;/strong&gt;
		&lt;p&gt;Configure RabbitMQ messaging system in the &lt;code&gt;[DEFAULT]&lt;/code&gt; section:&lt;/p&gt;
			&lt;pre&gt;
 [DEFAULT]
 rpc_backend = rabbit
 rabbit_host = controller
 rabbit_userid = RABBIT_USER
 rabbit_password = RABBIT_PASSWORD
 			&lt;/pre&gt;

	&lt;/li&gt;
	&lt;li&gt;
		&lt;strong&gt;Keystone authentication&lt;/strong&gt;
		&lt;p&gt;Modify &lt;code&gt;[DEFAULT]&lt;/code&gt; and &lt;code&gt;[keystone_authtoken]&lt;/code&gt; sections to configure authentication service access:&lt;/p&gt;
			&lt;pre&gt;
 [DEFAULT]
 auth_strategy = keystone

 [keystone_authtoken]
 auth_uri = http://controller:5000/v2.0
 identity_uri = http://controller:35357
 admin_tenant_name = service
 admin_user = cinder
 admin_password = CINDER_PASSWORD
		  &lt;/pre&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;strong&gt;Database connection&lt;/strong&gt;
		&lt;p&gt;In the &lt;code&gt;[database]&lt;/code&gt; section change the MySQL connection string:&lt;/p&gt;
		&lt;pre&gt;
 [database]
 connection = mysql://cinder:CINDER_DB_PASSWORD@controller/cinder
 		&lt;/pre&gt;
	&lt;/li&gt;
	&lt;li&gt;
		&lt;strong&gt;Image service and management IP address&lt;/strong&gt;
		&lt;p&gt;In the &lt;code&gt;[DEFAULT]&lt;/code&gt; section configure the location of the Image Service. Modify management interface address to match your storage node IP. Enable verbose logging.
				&lt;pre&gt;
 [DEFAULT]
 host = controller
 my_ip = MANAGEMENT_INTERFACE_IP

 verbose = true
 		&lt;/pre&gt;
	
	&lt;li&gt;
		&lt;strong&gt;Target administration service&lt;/strong&gt;
		&lt;p&gt;In the &lt;code&gt;[DEFAULT]&lt;/code&gt; configure Cinder to use &lt;code&gt;tgtadm&lt;/code&gt; service for iSCSI storage management:&lt;/p&gt;
				&lt;pre&gt;
 [DEFAULT]
 iscsi_helper = tgtadm
				&lt;/pre&gt;
		&lt;p&gt; Edit the &lt;code&gt;/etc/tgt/targets.conf&lt;/code&gt; to include the cinder volumes. This will hold information about volume&#39;s location, CHAP credentials, IQNs, etc. &lt;/p&gt;
		&lt;pre&gt;
 include /etc/cinder/volumes/*
		&lt;/pre&gt;
	&lt;/li&gt;


&lt;p&gt;Start the Block Storage and target service and configure them to be automatically started at boot time.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;openstack-cinder-volume.service tgtd.service
systemctl start openstack-cinder-volume.service tgtd.service&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt; Run this command on the controller node to ensure the Storage service is up and running. &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cinder service-list
+------------------+--------+------+---------+-------+----------------------------+
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;      Binary      &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  Host  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; Zone &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  Status &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; State &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;         Updated_at         &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
+------------------+--------+------+---------+-------+----------------------------+
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; cinder-scheduler &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; hydra  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; nova &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; enabled &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   up  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 2015-01-31T17:57:44.000000 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  cinder-volume   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; cinder &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; nova &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; enabled &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   up  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; 2015-01-31T17:57:55.000000 &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
+------------------+--------+------+---------+-------+----------------------------+&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p class=&quot;notice&quot;&gt;
&lt;strong&gt;Tip:&lt;/strong&gt; If you are able to attach cinder volumes from OpenStack, but the file system creation is taking too long or got stuck, try to disable the checksumming of your storage node VIF. Use &lt;code&gt; ethtool -K vifz.0 tx off &lt;/code&gt; where &lt;code&gt;z&lt;/code&gt; is the domain identifier of the storage VM.
&lt;/p&gt;

&lt;h3&gt;Validate the OpenStack instance&lt;/h3&gt;

&lt;p&gt; You should go through &lt;a href=&quot;http://docs.cloudfoundry.org/deploying/openstack/validate_openstack.html&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt; steps to validate your OpenStack environment. In the second part we will see how to deploy Cloud Foundry using &lt;strong&gt;BOSH&lt;/strong&gt; and push our first application.
&lt;/p&gt;
&lt;br /&gt;
&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/openstack/virtualization/deploying-cloud-foundry-on-openstack-juno-and-xenserver-part-i/&quot;&gt;Deploying Cloud Foundry on OpenStack Juno and XenServer (Part I)&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on January 30, 2015.&lt;/p&gt;</content>
</entry>


  

<entry>
  <title type="html"><![CDATA[Origins]]></title>
  <link rel="alternate" type="text/html" href="http://rabbitstack.github.io/origins/" />
  <id>http://rabbitstack.github.io/origins</id>
  <published>2015-01-29T17:53:53+01:00</published>
  <updated>2015-01-29T17:53:53+01:00</updated>
  <author>
    <name>Nedim Šabić</name>
    <uri>http://rabbitstack.github.io</uri>
    <email>bhnedo@hotmail.com</email>
  </author>
  <content type="html">&lt;p&gt;
I finally decided to go digital with what I called &lt;strong&gt;Rabbit Stack&lt;/strong&gt;. It will be a place where I&#39;ll be writing mostly about programming, devops, virtualization and similar IT freaky stuffs. Sometimes I will also write about album reviews, new bands I have discovered or some totally random stuff which would anyway be lost in the limbo of my mind. The blog is still under heavy development, but I&#39;ll try to work hard on it, so stay tuned...
&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://rabbitstack.github.io/origins/&quot;&gt;Origins&lt;/a&gt; was originally published by Nedim Šabić at &lt;a href=&quot;http://rabbitstack.github.io&quot;&gt;Rabbit Stack&lt;/a&gt; on January 29, 2015.&lt;/p&gt;</content>
</entry>

</feed>
